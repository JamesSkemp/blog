<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wcf on James Skemp&#39;s Test Hugo-Generated Site</title>
    <link>http://jamesskemp.github.io/words/tags/wcf/</link>
    <description>Recent content in Wcf on James Skemp&#39;s Test Hugo-Generated Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Jul 2010 22:37:00 -0500</lastBuildDate>
    <atom:link href="http://jamesskemp.github.io/words/tags/wcf/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>My first Silverlight Web application</title>
      <link>http://jamesskemp.github.io/words/posts/My-first-Silverlight-Web-application/</link>
      <pubDate>Mon, 19 Jul 2010 22:37:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/posts/My-first-Silverlight-Web-application/</guid>
      <description>&lt;p&gt;The more I do with Microsoft technologies the hard it becomes for me to want to move outside of them. With the .NET Framework and Visual Studio 2010, which is the best development tool I think I&#39;ve ever used, it&#39;s easy to get sucked in.&lt;/p&gt;
&lt;p&gt;Since I&#39;ve wanted to experiment with it for a while, and since I needed to do some kind of development after slacking off this weekend, I looked into creating a simple Silverlight application that would use the same &lt;a href=&#34;http://strivinglife.com/words/post/Tutorial-ASPNET-C-sharp-WCF-WebHttp-service-with-jQuery-Table-of-Contents.aspx&#34;&gt;Web service I created late last month&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I haven&#39;t hooked it up to any pages within the site yet, since it still needs some styling work, but ... here&#39;s&amp;nbsp;&lt;a rel=&#34;external&#34; href=&#34;http://jamesrskemp.com/Projects/MusicServiceSilverlight&#34;&gt;a Silverlight application using&amp;nbsp;my MusicService project&lt;/a&gt;. Note this requires Silverlight 4.0.&lt;/p&gt;
&lt;p&gt;At this time it only works with one of the methods, and the output is a little clunky, but when I have time this week over lunch, or over the weekend, I&#39;ll try to clean it up.&lt;/p&gt;
&lt;p&gt;This was a nice little exercise, involving a purely test project/solution to figure out how to make it work, and then adding a&amp;nbsp;new project to my ASP.NET MVC 2.0 project that is the Web site. A cross domain policy file had to be added to the services site so that Silverlight could access it (otherwise it was erroring but seemingly without a message).&lt;/p&gt;
&lt;p&gt;That&#39;s about two hours of work, and outside of about 15 minutes wasted because of some stupidity on my part (I&#39;ll blame the small amount of real-estate on my laptop monitor), it went fairly smoothly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Function to Parse a Microsoft JSON DateTime returned from a WCF service in JavaScript</title>
      <link>http://jamesskemp.github.io/words/posts/Parsing-Microsoft-JSON-DateTime-from-WCF-service/</link>
      <pubDate>Sun, 04 Jul 2010 14:57:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/posts/Parsing-Microsoft-JSON-DateTime-from-WCF-service/</guid>
      <description>&lt;p&gt;When a DateTime is converted to JSON in a WCF Web service (WebHttp in this particular case) it&#39;s semi-difficult to convert that to something we can use when we return the date to a client via JavaScript. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#34;LastPlayed&#34;:&#34;\/Date(1278187099000-0400)\/&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After almost an hour of research and goofing around with this, I&#39;ve come up with the following, which seems to work just fine on Internet Explorer 8, Firefox 3.6, and Chrome 5.0.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;js&#34;&gt;function parseMicrosoftJsonDateTime(content) {
    try {
        content = content.replace(/\//g, &#39;&#39;);
        var contentDate = eval(&#39;new &#39; + content);
        return contentDate.toDateString() + &#39; &#39; + contentDate.toTimeString();
    } catch (ex) {
        return content;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see if it fails at any point I just return whatever was passed. Otherwise since the only thing bothering us are the two /s, I&#39;m first removing all of those. Then I&#39;m creating a new variable, which ends up call new Date(x). This date variable can then be converted to a string via standard JavaScript functionality.&lt;/p&gt;
&lt;p&gt;There may be a better way to handle this, but this is fairly quick, and works just as I need it to.&lt;/p&gt;
&lt;h3&gt;Sample outputs&lt;/h3&gt;
&lt;p&gt;Internet Explorer 8: Sat Jul 3 2010 14:58:18 CDT&lt;/p&gt;
&lt;p&gt;Chrome 5.0 and Firefox 3.6: Sat Jul 03 2010 14:58:18 GMT-0500 (Central Daylight Time)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RESTful WCF Web services, easily</title>
      <link>http://jamesskemp.github.io/words/posts/RESTful-WCF-Web-services-easily/</link>
      <pubDate>Tue, 15 Jun 2010 22:47:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/posts/RESTful-WCF-Web-services-easily/</guid>
      <description>&lt;p&gt;I know I should know them better so I&#39;ve been looking into WCF Web services, with a heavy lean towards an implementation based on REST principles.&lt;/p&gt;
&lt;p&gt;After a good deal of research, where it was highly suggested that while ASP.NET MVC may make sense, WCF is still the way to go for Web services, I stumbled upon &lt;a rel=&#34;external&#34; href=&#34;http://blogs.msdn.com/b/endpoint/archive/2010/01/06/introducing-wcf-webhttp-services-in-net-4.aspx&#34;&gt;WCF WebHttp Services&lt;/a&gt;, which uses functionality released in .NET 4.&lt;/p&gt;
&lt;p&gt;After a painless install via Visual Studio 2010&#39;s Extension Manager (&lt;a rel=&#34;external&#34; href=&#34;http://visualstudiogallery.msdn.microsoft.com/en-us/fbc7e5c1-a0d2-41bd-9d7b-e54c845394cd&#34;&gt;more information&lt;/a&gt;), and troubleshooting a stupid mistake on my end, I was able to quickly create a Web service that uses an assembly I had created to parse one of my &lt;a rel=&#34;external&#34; href=&#34;http://jamesrskemp.com/apps/iTunesPlaylists2Xml/&#34;&gt;iTunes Playlists to Xml&lt;/a&gt; files and return a listing of tracks for a particular artist.&lt;/p&gt;
&lt;p&gt;I am more than a little disappointed that it took months for me to find this, but the flexibility it allows, and the joy of working with it, makes up for it almost entirely.&lt;/p&gt;
&lt;h3&gt;Updates&lt;/h3&gt;
&lt;p&gt;10:04 P.M.: See also &lt;a rel=&#34;external&#34; href=&#34;http://msdn.microsoft.com/en-us/library/bb412169.aspx&#34;&gt;WCF Web HTTP Programming Model&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
