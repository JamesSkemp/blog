<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html on James Skemp&#39;s Test Hugo-Generated Site</title>
    <link>http://jamesskemp.github.io/words/tags/html/</link>
    <description>Recent content in Html on James Skemp&#39;s Test Hugo-Generated Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Apr 2011 19:45:00 -0500</lastBuildDate>
    <atom:link href="http://jamesskemp.github.io/words/tags/html/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to easily clear the window.applicationCache on select browsers</title>
      <link>http://jamesskemp.github.io/words/post/How-to-easily-clear-the-windowapplicationCache-on-select-browsers/</link>
      <pubDate>Sat, 02 Apr 2011 19:45:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/How-to-easily-clear-the-windowapplicationCache-on-select-browsers/</guid>
      <description>&lt;p&gt;While I was working on tweaking my video game listing, and creating my offline Web application manager, I kept running into issues with the cache manifest holding onto data much longer than I would have liked.&lt;/p&gt;
&lt;p&gt;After some research I found that Chrome&#39;s interface can easily be found by going to&amp;nbsp;&lt;a rel=&#34;external nofollow&#34; href=&#34;chrome://appcache-internals/&#34;&gt;chrome://appcache-internals/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On Safari, on the iPod Touch and iPad, you can stop/close Safari (hold down the home button on the home screen, and close the application) and then start it back up to clear the data. This is slightly unfortunate, since it would be nice if this would stick around after the application is closed, but is sufficient. It also isn&#39;t very obvious, as I spent a good deal of time trying to figure this out before I tried this as a last-ditch effort.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTML5 / LocalStorage Web application manager tool</title>
      <link>http://jamesskemp.github.io/words/post/HTML5-LocalStorage-Web-application-manager-tool/</link>
      <pubDate>Sat, 02 Apr 2011 19:43:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/HTML5-LocalStorage-Web-application-manager-tool/</guid>
      <description>&lt;p&gt;As &lt;a href=&#34;http://jamesskemp.github.io/words/post/Interesting-feature-with-parsing-XML-with-jQuery-on-Safari.aspx&#34;&gt;previously mentioned&lt;/a&gt; I&#39;ve been spending a good amount of time looking at HTML5/local storage in my free time.&lt;/p&gt;
&lt;p&gt;For testing purposes, I ended up putting a number of items within &lt;a rel=&#34;external&#34; href=&#34;http://media.jamesrskemp.com/xmlHtml/video_games.html&#34;&gt;my video games offline application&lt;/a&gt;, which is fine, but results in some extraneous information on the page.&lt;/p&gt;
&lt;p&gt;To clean this up, as well as to allow for additional functionality, I&#39;ve gone ahead and created a &lt;a rel=&#34;external&#34; href=&#34;http://media.jamesrskemp.com/AppManager.html&#34;&gt;Web application manager&lt;/a&gt; for my media.jamesrskemp.com Web site.&lt;/p&gt;
&lt;p&gt;It has a pretty simple interface, and still requires some work, but I&#39;m ultimately pretty happy with it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interesting feature with parsing XML with jQuery on Safari</title>
      <link>http://jamesskemp.github.io/words/post/Interesting-feature-with-parsing-XML-with-jQuery-on-Safari/</link>
      <pubDate>Sun, 27 Mar 2011 20:39:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/Interesting-feature-with-parsing-XML-with-jQuery-on-Safari/</guid>
      <description>&lt;p&gt;I&#39;ve been playing around with HTML5 quite a bit recently, in particular with offline Web applications.&lt;/p&gt;
&lt;p&gt;My second experiment (my first is on pause) was with making &lt;a rel=&#34;external&#34; href=&#34;http://media.jamesrskemp.com/xml/video_games.xml&#34;&gt;my video games&lt;/a&gt; available, so that I can access the listing when I&#39;m out shopping at used game stores.&lt;/p&gt;
&lt;p&gt;It&#39;s still in progress, but you can see my &lt;a rel=&#34;external&#34; href=&#34;http://media.jamesrskemp.com/xmlHtml/video_games.html&#34;&gt;offline listing of video games&lt;/a&gt; now.&lt;/p&gt;
&lt;p&gt;My main intention is to make this available on my iPod Touch, so I was a bit dismayed when I found that the listing didn&#39;t display the title of the game. Everything else displayed just fine, but not the titles. Naturally, after some searching about I posted my question to Stack Overflow - &lt;a rel=&#34;external&#34; href=&#34;http://stackoverflow.com/questions/5427259/xmldocument-via-jquery-ajax-call-stored-as-string-in-localstorage-results-in-sa&#34;&gt;XMLDocument (via jQuery ajax call) stored as string in localStorage results in Safari not finding title elements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After further research, it looks like I was missing a parseXML call, which results in the data correctly being pulled/displayed in Safari.&lt;/p&gt;
&lt;p&gt;I decided to do some further testing on this issue, and I believe I&#39;ve discovered why it&#39;s displaying as it is.&lt;/p&gt;
&lt;h3&gt;The test code&lt;/h3&gt;
&lt;p&gt;I created a bit of test code - &lt;a href=&#34;http://jamesrskemp.com/testing/jQueryXmlParsing.html&#34;&gt;jQuery XML parsing&lt;/a&gt; - and that I&#39;ve posted below.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;jQuery XML Parsing testing - JamesRSkemp.com&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;jQuery XML Parsing testing&amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;The following test code was created to test Internet Explorer 9, Chrome 10, Firefox 4, Opera 11, Safari 5 (Windows), and Safari on iOS 4.3. Read more in &amp;lt;a href=&#34;http://strivinglife.com/words/post/Interesting-feature-with-parsing-XML-with-jQuery-on-Safari.aspx&#34; rel=&#34;external&#34;&amp;gt;Interesting feature with parsing XML with jQuery on Safari&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
    &amp;lt;noscript&amp;gt;You must have JavaScript enabled to view this test.&amp;lt;/noscript&amp;gt;
    &amp;lt;div id=&#34;TestOutput&#34;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;script type=&#34;text/javascript&#34; src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&#34;text/javascript&#34;&amp;gt;
        // We&#39;ll store an example of an XML file as a string of text.
        var xmlContent = &#34;&amp;lt;?xml version=&#39;1.0&#39;?&amp;gt;&amp;lt;Books&amp;gt;&amp;lt;Book&amp;gt;&amp;lt;Title&amp;gt;Book 1&amp;lt;/Title&amp;gt;&amp;lt;Author&amp;gt;Book 1 Author&amp;lt;/Author&amp;gt;&amp;lt;/Book&amp;gt;&amp;lt;Book&amp;gt;&amp;lt;Title&amp;gt;Book 2&amp;lt;/Title&amp;gt;&amp;lt;Author&amp;gt;Book 2 Author&amp;lt;/Author&amp;gt;&amp;lt;/Book&amp;gt;&amp;lt;Book&amp;gt;&amp;lt;Title&amp;gt;Book 3&amp;lt;/Title&amp;gt;&amp;lt;Author&amp;gt;Book 3 Author&amp;lt;/Author&amp;gt;&amp;lt;/Book&amp;gt;&amp;lt;Book&amp;gt;&amp;lt;Title&amp;gt;Book 4&amp;lt;/Title&amp;gt;&amp;lt;Author&amp;gt;Book 4 Author&amp;lt;/Author&amp;gt;&amp;lt;/Book&amp;gt;&amp;lt;Book&amp;gt;&amp;lt;Title&amp;gt;Book 5&amp;lt;/Title&amp;gt;&amp;lt;Author&amp;gt;Book 5 Author&amp;lt;/Author&amp;gt;&amp;lt;/Book&amp;gt;&amp;lt;/Books&amp;gt;&#34;;
        var testOutputText = &#34;&#34;;

        var simpleCall = $(xmlContent);
        var simpleParse = $.parseXML(xmlContent);
        var parse = $($.parseXML(xmlContent));

        try {
            testOutputText += &#34;Type of $(xmlContent): &#34; + typeof simpleCall + &#34;&amp;lt;br /&amp;gt;&#34;;
            testOutputText += &#34;To string: &#34; + simpleCall.toString() + &#34;&amp;lt;br /&amp;gt;&#34;;
            testOutputText += &#34;Length: &#34; + simpleCall.length + &#34;&amp;lt;br /&amp;gt;&#34;;
            if (typeof simpleCall === &#39;object&#39;) {
                for (var prop in simpleCall) {
                    //testOutputText += &#34;   property: &#34; + prop + &#34; value: [&#34; + simpleCall[prop] + &#34;]\n&#34;;
                }
            }
            simpleCall.find(&#34;Book&#34;).each(function () {
                testOutputText += &#34;&amp;lt;em&amp;gt;&#34; + $(this).find(&#39;Title&#39;).text() + &#34;&amp;lt;/em&amp;gt; by &#34; + $(this).find(&#34;Author&#34;).text() + &#34;&amp;lt;br /&amp;gt;&#34;;
            });
        } catch (e) {
            testOutputText += &#34;&amp;lt;span style=&#39;color:red;&#39;&amp;gt;There was an error processing at this point.&amp;lt;/span&amp;gt;&amp;lt;br /&amp;gt;&#34;;
        }

        try {
            testOutputText += &#34;Type of $.parseXML(xmlContent): &#34; + typeof simpleParse + &#34;&amp;lt;br /&amp;gt;&#34;;
            testOutputText += &#34;To string: &#34; + simpleParse.toString() + &#34;&amp;lt;br /&amp;gt;&#34;;
            testOutputText += &#34;Length: &#34; + simpleParse.length + &#34;&amp;lt;br /&amp;gt;&#34;;
            if (typeof simpleParse === &#39;object&#39;) {
                for (var prop in simpleParse) {
                    //testOutputText += &#34;   property: &#34; + prop + &#34; value: [&#34; + simpleParse[prop] + &#34;]\n&#34;;
                }
            }
            simpleParse.find(&#34;Book&#34;).each(function () {
                testOutputText += &#34;&amp;lt;em&amp;gt;&#34; + $(this).find(&#39;Title&#39;).text() + &#34;&amp;lt;/em&amp;gt; by &#34; + $(this).find(&#34;Author&#34;).text() + &#34;&amp;lt;br /&amp;gt;&#34;;
            });
        } catch (e) {
            testOutputText += &#34;&amp;lt;span style=&#39;color:red;&#39;&amp;gt;There was an error processing at this point.&amp;lt;/span&amp;gt;&amp;lt;br /&amp;gt;&#34;;
        }

        try {
            testOutputText += &#34;Type of $($.parseXML(xmlContent)): &#34; + typeof parse + &#34;&amp;lt;br /&amp;gt;&#34;;
            testOutputText += &#34;To string: &#34; + parse.toString() + &#34;&amp;lt;br /&amp;gt;&#34;;
            testOutputText += &#34;Length: &#34; + parse.length + &#34;&amp;lt;br /&amp;gt;&#34;;
            if (typeof parse === &#39;object&#39;) {
                for (var prop in parse) {
                    //testOutputText += &#34;   property: &#34; + prop + &#34; value: [&#34; + simpleParse[prop] + &#34;]\n&#34;;
                }
            }
            parse.find(&#34;Book&#34;).each(function () {
                testOutputText += &#34;&amp;lt;em&amp;gt;&#34; + $(this).find(&#39;Title&#39;).text() + &#34;&amp;lt;/em&amp;gt; by &#34; + $(this).find(&#34;Author&#34;).text() + &#34;&amp;lt;br /&amp;gt;&#34;;
            });
        } catch (e) {
            testOutputText += &#34;&amp;lt;span style=&#39;color:red;&#39;&amp;gt;There was an error processing at this point.&amp;lt;/span&amp;gt;&amp;lt;br /&amp;gt;&#34;;
        }

        $(&#39;#TestOutput&#39;).append(testOutputText);
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;What the test does&lt;/h3&gt;
&lt;p&gt;I did a couple of things with this test.&lt;/p&gt;
&lt;p&gt;First, I created a string with the following XML, and saved it as xmlContent.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;xml&#34;&gt;&amp;lt;?xml version=&#39;1.0&#39;?&amp;gt;
&amp;lt;Books&amp;gt;
    &amp;lt;Book&amp;gt;
        &amp;lt;Title&amp;gt;Book 1&amp;lt;/Title&amp;gt;
        &amp;lt;Author&amp;gt;Book 1 Author&amp;lt;/Author&amp;gt;
    &amp;lt;/Book&amp;gt;
    &amp;lt;Book&amp;gt;
        &amp;lt;Title&amp;gt;Book 2&amp;lt;/Title&amp;gt;
        &amp;lt;Author&amp;gt;Book 2 Author&amp;lt;/Author&amp;gt;
    &amp;lt;/Book&amp;gt;
    &amp;lt;Book&amp;gt;
        &amp;lt;Title&amp;gt;Book 3&amp;lt;/Title&amp;gt;
        &amp;lt;Author&amp;gt;Book 3 Author&amp;lt;/Author&amp;gt;
    &amp;lt;/Book&amp;gt;
    &amp;lt;Book&amp;gt;
        &amp;lt;Title&amp;gt;Book 4&amp;lt;/Title&amp;gt;
        &amp;lt;Author&amp;gt;Book 4 Author&amp;lt;/Author&amp;gt;
    &amp;lt;/Book&amp;gt;
    &amp;lt;Book&amp;gt;
        &amp;lt;Title&amp;gt;Book 5&amp;lt;/Title&amp;gt;
        &amp;lt;Author&amp;gt;Book 5 Author&amp;lt;/Author&amp;gt;
    &amp;lt;/Book&amp;gt;
&amp;lt;/Books&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next I created three variables, storing different things. First, I did $(xmlContent), then $.parseXML(xmlContent), and finally $($.parseXML(xmlContent)).&lt;/p&gt;
&lt;h3&gt;The results&lt;/h3&gt;
&lt;p&gt;Interestingly, on IE 9, Chrome 10, Firefox 4, Opera 11, Safari 5 (Windows), the first and third tests return the type of &lt;strong&gt;object Object&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For the second test we have &lt;strong&gt;object Document&lt;/strong&gt; on IE 9, Chrome 10, Safari 5, and Safari on iOS 4.3, and &lt;strong&gt;object XMLDocument&lt;/strong&gt; on Firefox 4 and Opera 11.&lt;/p&gt;
&lt;p&gt;But for the first test, while we have a length of &lt;em&gt;2&lt;/em&gt; on IE 9, Chrome 10, Firefox 4, and Opera 11, we only have a length of 1 on Safari 5 and Safari on iOS 4.3.&lt;/p&gt;
&lt;p&gt;The fix, then, is to make sure to use the last of the three, but it seems odd that this wouldn&#39;t work on only one of the tested browsers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Code cleanup and commenting - done right</title>
      <link>http://jamesskemp.github.io/words/post/Code-cleanup-and-commenting-done-right/</link>
      <pubDate>Sun, 18 Jun 2006 14:13:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/Code-cleanup-and-commenting-done-right/</guid>
      <description>&lt;p&gt;
For the past hour, I&amp;#39;ve been looking at current ways to get my name out there for Web page cleanup and commenting.  In other words, I&amp;#39;d like to work with existing code to bring it closer to the standards, and comment it, if necessary.  I would think it would be of great benefit to those individuals who bought a solution from a vendor, and are looking at changes to that code, or cleanup so that there pages act alike in most browsers.  Unfortunately, I haven&amp;#39;t found a site to offer my wares.  I&amp;#39;ve also looked at open source projects that may need some free help, but, alas, nothing there either.
&lt;/p&gt;
&lt;p&gt;
If someone happens upon this by way of a Google search (or any other search - Google just happens to bring in the most traffic for me), I&amp;#39;d be interested in hearing from you on whether you&amp;#39;re looking for something similar, or if you&amp;#39;re looking for someone to fill that position ;)
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using a standard template to create a simple Web site</title>
      <link>http://jamesskemp.github.io/words/post/Using-a-standard-template-to-create-a-simple-Web-site/</link>
      <pubDate>Sun, 02 Apr 2006 19:33:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/Using-a-standard-template-to-create-a-simple-Web-site/</guid>
      <description>&lt;p&gt;
As stated in a previous article, there&amp;#39;s a site, &lt;a href=&#34;http://blog.html.it/layoutgala/&#34;&gt;http://blog.html.it/layoutgala/&lt;/a&gt;, that offers free templates.  Using these templates, you can easily create a site, so long as you have the content you need to fill the pages.
&lt;/p&gt;
&lt;p&gt;
In this article, we&amp;#39;ll be putting some content into one of these templates, Layout 34, but we can use the methods we discuss here on any of the templates.
&lt;/p&gt;

&lt;p&gt;
First, you&amp;#39;ll need &lt;a href=&#34;http://strivinglife.net/wordpress/2006/03/25/74/web-site-development-content-and-audience/&#34;&gt;content&lt;/a&gt;.  If you don&amp;#39;t have content, then you&amp;#39;ve got a bit of a problem :)
&lt;/p&gt;
&lt;!--adsense--&gt;
&lt;p&gt;
Second, you&amp;#39;ll want to have an idea of what sections you&amp;#39;ll need.  If you&amp;#39;ve followed the above guide, then you probably have a really good indication of what sections you&amp;#39;ll have.  To these sections, you&amp;#39;ll need to add a home page, a contact page, and possibly a site map, or search feature.
&lt;/p&gt;
&lt;p&gt;
The home page should have links to all of your main areas, should discuss what the purpose of your site is, and etcetera.  On the one hand, you&amp;#39;ll want to make it both informational enough for people who have visited your site, but not a one-time read, since people may use it to get to your site in the future.  A short number of &amp;#39;news&amp;#39; items, for example, is definitely a plus.
&lt;/p&gt;
&lt;p&gt;
Your contact page should contain whatever information you&amp;#39;d like to provide regarding how people can contact you, as well as information about who you are (to a lesser extent - a bio / about us page can be another page all-together).
&lt;/p&gt;
&lt;p&gt;
The site map, or search page, should contain a way for people to find any content on your site.  At the lowest level, the page should list the major areas and subareas of your site.  Working towards more complexity, the site map can contain every page on your site, and finally the ability to search your content.  For search, Google offers a free site search.
&lt;/p&gt;
&lt;p&gt;
Getting back to Layout 34, make sure you&amp;#39;ve got a copy on your computer.  You can save the html file to your desktop (Layout34.html is what I&amp;#39;ll be using for a name), and open it using your favourite browser.  Since the page is using very simple HTML, anyone can open the file up using only a browser.
&lt;/p&gt;
&lt;p&gt;
Of course, if you&amp;#39;ve setup Apache or the like on your computer, than you can certainly put this HTML file in your Web folder - and, with more advanced techniques, you would have to.
&lt;/p&gt;
&lt;p&gt;
Now that you&amp;#39;ve saved the file and opened it up using your browser, you can see what the template looks like with the basic text they&amp;#39;ve provided.  We&amp;#39;re going to clean that up by adding our own items.
&lt;/p&gt;
&lt;p&gt;
First, open Notepad.  Now, use Notepad to open up Layout34.html.  If Word Wrap is on (under Format), turn it off.
&lt;/p&gt;
&lt;p&gt;
You can now see the source of this page, which consists solely of HTML.  If you&amp;#39;re familiar with HTML, or you&amp;#39;ve read through &lt;a href=&#34;http://strivinglife.net/wordpress/2006/03/27/75/just-enough-html-to-be-dangerous/&#34;&gt;&lt;cite&gt;&amp;quot;Just enough HTML to be dangerous&amp;quot;&lt;/cite&gt;&lt;/a&gt;, then at least some of this code is going to make sense.  You see some &amp;lt;p&amp;gt; tags looking a number of lines down.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s also a number of &amp;lt;div&amp;gt; tags, which are basically blocked containers for content.  These have id attributes, which are basically unique identifiers.  The id values are picked so as to provide the most information possible about what these &amp;#39;containers&amp;#39; hold.
&lt;/p&gt;
&lt;p&gt;
Starting off, the only thing we&amp;#39;re going to worry about is the content within a couple of divs (&amp;lt;div&amp;gt;s).
&lt;/p&gt;
&lt;p&gt;
First, we&amp;#39;re going to find the footer div (&amp;lt;div id=&amp;quot;footer&amp;quot;&amp;gt; ... &amp;lt;/div&amp;gt;).
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re now going to replace the text within this with a short bit of contact information.
&lt;/p&gt;
&amp;lt;p&amp;gt;Copyright 2006, &amp;lt;a href=&amp;quot;mailto:our_email@domain.ext&amp;quot;&amp;gt;Our Name&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;p&gt;
Save the file, and reload the file in your browser.  You&amp;#39;ll notice that your text is now in the footer.
&lt;/p&gt;
&lt;p&gt;
Now, we&amp;#39;re going to remove the content from the &amp;#39;extra&amp;#39; div (&amp;lt;div id=&amp;quot;extra&amp;quot;&amp;gt; ... &amp;lt;/div&amp;gt;).  Just remove everything between the two divs (including the paragraph, &amp;lt;p&amp;gt;, tags).  Save, and again refresh your browser.  If you&amp;#39;re using Internet Explorer you&amp;#39;ll still see the block.  We&amp;#39;ll get rid of the block (since we don&amp;#39;t want to use it, quite yet), by commenting it out.
&lt;/p&gt;
&lt;p&gt;
To do this, you&amp;#39;ll need to add &amp;lt;!-- before the div, and --&amp;gt; after the div.
&lt;/p&gt;
&lt;blockquote&gt;
    &amp;lt;!--&amp;lt;div id=&amp;quot;extra&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;--&amp;gt;
&lt;/blockquote&gt;
&lt;p&gt;
You can use this technique for other things as well.  Anything you comment out will not be rendered (typically), but will display in the source (which you can see by right clicking within your browser and selecting the appropriate menu item).
&lt;/p&gt;
&lt;p&gt;
Now, we&amp;#39;ll create our base navigation items, by finding the &amp;#39;navigation&amp;#39; div.  Remove everything within it and fill in your navigation structure.  For example, if you wanted a navigation with the following items - About me, Contact me, My cat, My favourite books - you could do something like this;
&lt;/p&gt;
&lt;blockquote&gt;
    &amp;lt;div id=&amp;quot;navigation&amp;quot;&amp;gt;&lt;br /&gt;
    &amp;lt;p&amp;gt;About me&amp;lt;/p&amp;gt;&lt;br /&gt;
    &amp;lt;p&amp;gt;Contact me&amp;lt;/p&amp;gt;&lt;br /&gt;
    &amp;lt;p&amp;gt;My cat&amp;lt;/p&amp;gt;&lt;br /&gt;
    &amp;lt;p&amp;gt;My favourite books&amp;lt;/p&amp;gt;&lt;br /&gt;
    &amp;lt;/div&amp;gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, save and refresh.
&lt;/p&gt;
&lt;p&gt;
Now, we&amp;#39;re going to change the header, by changing the content inside &amp;lt;h1&amp;gt; ... &amp;lt;/h1&amp;gt; (Heading 1). Put whatever (&amp;#39;My site&amp;#39; for example). This should be unique to each page, unless you&amp;#39;ll be placing your logo in this place.
&lt;/p&gt;
&lt;p&gt;
Save and refresh.
&lt;/p&gt;
&lt;p&gt;
Finally, clear out &amp;#39;content&amp;#39; div, and fill in some new information. For this page, you could fill out whatever you wanted to display on your main page.
&lt;/p&gt;
&lt;p&gt;
Now, find the title tag (&amp;lt;title&amp;gt; ... &amp;lt;/title&amp;gt;) and put a unique title in this area. It should probably match your main heading. You cannot use any HTML within these tags - just plain text.
&lt;/p&gt;
&lt;p&gt;
With that, you&amp;#39;ve successfully created your first page. All you need to do now is create additional pages (the other items in your navigation) by making a copy of this page, and changing the heading and title. You&amp;#39;ll also need to add links to the navigation (see &lt;a href=&#34;http://strivinglife.net/wordpress/2006/03/27/75/just-enough-html-to-be-dangerous/&#34;&gt;&lt;cite&gt;&amp;quot;Just enough HTML to be dangerous&amp;quot;&lt;/cite&gt;&lt;/a&gt;) so that all of your pages link up correctly.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Code: Web Authoring Statistics</title>
      <link>http://jamesskemp.github.io/words/post/Google-Code-Web-Authoring-Statistics/</link>
      <pubDate>Wed, 29 Mar 2006 07:51:00 -0600</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/Google-Code-Web-Authoring-Statistics/</guid>
      <description>&lt;p&gt;
Here&amp;#39;s an interesting article out of the Googleplex: &lt;a href=&#34;http://code.google.com/webstats/index.html&#34;&gt;Google Code: Web Authoring Statistics&lt;/a&gt;.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a look at code from December of 2005, and shows some interesting coding mistakes. Too bad more software doesn&amp;#39;t (can&amp;#39;t?) follow W3C standards ...
&lt;/p&gt;
&lt;p&gt;
EDIT: It&amp;#39;s great that Google has done this, but I&amp;#39;d like to hope that they&amp;#39;ll continue to do this. As one of the links from Google attests, it&amp;#39;s time for Web developers to look at standards, from the top down, and begin implementing them. If someone isn&amp;#39;t implementating standards, then they need to be helped.
&lt;/p&gt;
&lt;p&gt;
And, the old guides out there that are written in the times of pre-CSS need to get cleaned up as well. But since that&amp;#39;s not going to happen, we&amp;#39;ve got to keep our own code clean.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>&#39;Just enough HTML to be dangerous&#39;</title>
      <link>http://jamesskemp.github.io/words/post/Just-enough-HTML-to-be-dangerous/</link>
      <pubDate>Mon, 27 Mar 2006 20:26:00 -0600</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/Just-enough-HTML-to-be-dangerous/</guid>
      <description>&lt;p&gt;
This time, we&amp;#39;ll be covering the minimum HTML knowledge required to be truly dangerous. While an expanded understanding of HTML is not, per se, required, having at least some understanding will help in a number of ways. Of course, the more HTML you know, the less you rely on tools to do the work (which is a good thing, since we&amp;#39;re not always able to use the tools that we&amp;#39;re familar with).&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
The first thing we&amp;#39;ll be discussing is how to apply formatting to text. &lt;strong&gt;Bold&lt;/strong&gt;, &lt;em&gt;italics&lt;/em&gt; or &lt;em&gt;emphasis&lt;/em&gt;, and &lt;u&gt;underline&lt;/u&gt;.
&lt;/p&gt;
&lt;p&gt;
To make text &lt;strong&gt;bold&lt;/strong&gt;, we&amp;#39;ll use the &amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt; tags. If we want some text to be bold, we simply need to put it within these tags. For example, &amp;lt;strong&amp;gt;bold text &amp;lt;/strong&amp;gt;, would display as &lt;strong&gt;bold text&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
In HTML, and most Web-based programming languages, many items, in this case text, are defined by elements which contain either opened or closed tags. A closed tag is one that has a / within it. So, in the previous example we write an opening strong tag, some text, and then a closing strong tag. As we&amp;#39;ll see later, some elements only consist of one closed tag.
&lt;/p&gt;
&lt;p&gt;
For &lt;em&gt;italics&lt;/em&gt;, we&amp;#39;ll use the &amp;lt;em&amp;gt;&amp;lt;/em&amp;gt; tags. So, &amp;lt;em&amp;gt;italic text&amp;lt;/em&amp;gt; displays as &lt;em&gt;italic text&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
For an &lt;span style=&#34;text-decoration: underline&#34;&gt;underline&lt;/span&gt;, we use &amp;lt;u&amp;gt;&amp;lt;/u&amp;gt; tags. &amp;lt;u&amp;gt;underlined text&amp;lt;/u&amp;gt; displays as &lt;span style=&#34;text-decoration: underline&#34;&gt;underlined text&lt;/span&gt;. However, there&amp;#39;s a very important point about underlined text. For the most part, you should stay away from using this element / these tags. Most of the newer Web standards do not allow the use of these tags, typically because underlined text should be used only for hyperlinks (or the appropriate citations). However, we won&amp;#39;t go into the discussion of the correct way to show underlined text, at this point.
&lt;/p&gt;
&lt;p&gt;
What if we want some text to be both &lt;em&gt;&lt;strong&gt;bold and italic&lt;/strong&gt;&lt;/em&gt;? We would simply place the text within both elements; &amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;bold and italic&amp;lt;/em&amp;gt;&amp;lt;/strong&amp;gt;. Note that you should close inner elements before you close outer ones. So, &amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;bold and italic&amp;lt;/strong&amp;gt;&amp;lt;/em&amp;gt; would not be correct. So, if you wanted to display the text as &lt;em&gt;bold &lt;strong&gt;and&lt;/strong&gt; italic&lt;/em&gt;, you would do: &amp;lt;em&amp;gt;bold &amp;lt;strong&amp;gt;and&amp;lt;/strong&amp;gt; italic&amp;lt;/em&amp;gt;. 
&lt;/p&gt;
&lt;p&gt;
The next thing to cover is paragraphs. To define a block of text as a paragraph, you simply need to place it within &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;. So, &amp;lt;p&amp;gt;This is one paragraph.&amp;lt;/p&amp;gt; would display as:
&lt;/p&gt;
&lt;p&gt;
This is one paragraph.
&lt;/p&gt;
&lt;p&gt;
Next, we&amp;#39;ve got the backbone of the Internet, the hyperlink, or anchor. This element has an additional kink, in that it requires a couple of attributes. The element is defined by the &amp;lt;a&amp;gt;&amp;lt;/a&amp;gt; tags, but doing &amp;lt;a&amp;gt;http://strivinglife.net/&amp;lt;/a&amp;gt; just isn&amp;#39;t enough. Rather, you have to use a href attribute. &amp;lt;a href=&amp;quot;http://strivinglife.net/&amp;quot;&amp;gt;http://strivinglife.net/&amp;lt;/a&amp;gt;. You can then change the text between the tags to be the clickable text. &amp;lt;a href=&amp;quot;http://strivinglife.net/&amp;quot;&amp;gt;StrivingLife.net&amp;lt;/a&amp;gt; displays as &lt;a href=&#34;http://strivinglife.net/&#34;&gt;StrivingLife.net&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
At this point, we&amp;#39;re going to stop, because this is quite enough to make you quite dangerous. There&amp;#39;s a number of additional elements that can expand upon these capabilities, but you should first be able to use the above before you go too much deeper.
&lt;/p&gt;
&lt;p&gt;
Practice these elements now by taking some text and copying it into Notepad. Now, make some text bold, some italics, and throw in a couple of links. Save the file to your desktop with a .html extension (but don&amp;#39;t close the file in Notepad). You may need surround the file name with double quotes in order to make this happen (otherwise, it may attempt to save as .html.txt). Browse to your desktop and open the file with the browser of your choice.
&lt;/p&gt;
&lt;p&gt;
Now, go back to the file in Notepad and use the paragraph tags to make the appropriate paragraph breaks. Save the file again and refresh, or re-open the file in your browser. Tweak additional text as necessary.
&lt;/p&gt;
&lt;p&gt;
With that, you&amp;#39;ve got just enough HTML knowledge to be dangerous.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Found: 40 free HTML/CSS templates</title>
      <link>http://jamesskemp.github.io/words/post/Found-40-free-HTMLCSS-templates/</link>
      <pubDate>Fri, 24 Mar 2006 20:01:00 -0600</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/Found-40-free-HTMLCSS-templates/</guid>
      <description>&lt;p&gt;Alessandro Fulciniti, along with an unnamed number of people, have create 40 CSS-based templates, free for download, available at &lt;a rel=&#34;nofollow&#34; href=&#34;http://blog.html.it/layoutgala/&#34; target=&#34;_blank&#34;&gt;http://blog.html.it/layoutgala/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;They&#39;ve got near every possible layout that I can think of, along with a number more. Stick on a stylesheet, and you&#39;re golden.&lt;/p&gt;
&lt;p&gt;The only real problem I see is that navigation items should, according to some sources, come before the main content area. After all if the CSS disappears, then you&#39;ll still want navigation to come first.&lt;/p&gt;
&lt;p&gt;But will you really? After all, search bots check the beginning of pages first for content, and work their way down. And, people are probably coming to your site via search engines, so they&#39;ll be interested in the content, before they take a look at the rest of your site.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Don&#39;t use ul when you should use blockquote</title>
      <link>http://jamesskemp.github.io/words/post/Dont-use-ul-when-you-should-use-blockquote/</link>
      <pubDate>Mon, 02 Jan 2006 09:45:00 -0600</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/Dont-use-ul-when-you-should-use-blockquote/</guid>
      <description>&lt;p&gt;
I&amp;#39;m sorry, but I hate it when people use &amp;lt;ul&amp;gt; instead of &amp;lt;blockquote&amp;gt;.  &amp;lt;ul&amp;gt; is for list items, and should therefore be composed of list items (&amp;lt;li&amp;gt;s). If you&amp;#39;re not going to put &amp;lt;li&amp;gt;s for each item within a &amp;lt;ul&amp;gt; block, &lt;strong&gt;don&amp;#39;t use &amp;lt;ul&amp;gt;&lt;/strong&gt;&lt;!--adsense--&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Can we blame hosts for their poor HTML editors?</title>
      <link>http://jamesskemp.github.io/words/post/Can-we-blame-hosts-for-their-poor-HTML-editors/</link>
      <pubDate>Sat, 30 Apr 2005 00:00:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/post/Can-we-blame-hosts-for-their-poor-HTML-editors/</guid>
      <description>&lt;div class=&#34;WPArticleInfo&#34;&gt;
&lt;p&gt;
Description: A short article on HTML editors provided by Web site hosts.
&lt;/p&gt;
&lt;p&gt;
Created: April 30th 2005
&lt;/p&gt;
&lt;p&gt;
Modified: n/a
&lt;/p&gt;
&lt;p&gt;
Notes: The full posting can be found at http://www.cameraontheroad.com/?p=429.
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Doing some research on the Internet regarding WordPress and iPowerWeb, I ran into a post that one Lorelle VanFossen had written.  In this piece, she gives a letter/email that she had written to iPowerWeb, a Web site provider, regarding their poor HTML editor.  In addition, she also states that iPowerWeb should enforce some level of standard compliance upon Web site creators that are using their HTML editor.
&lt;/p&gt;
&lt;p&gt;
I felt that while her warning was appropriate, it should be taken with a grain of salt.  While it is true that most Web-based HTML editors work extremely poorly, especially those provided by hosts, most professionals, by which I mean non-amateurs, don&amp;#39;t use such editors.  In response to her posting, I posted the following comment (some typographical and grammatical mistakes have been fixed).
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    I have to disagree (and I apologize if this post of yours is quite old).  One should not judge a web site *host* on the basis of its HTML editor.
    &lt;/p&gt;
    &lt;p&gt;
    Most people, for good reason, don&amp;#39;t look at the HTML editor a host uses on their admin side.
    &lt;/p&gt;
    &lt;p&gt;
    Is this an oversight?
    &lt;/p&gt;
    &lt;p&gt;
    Hardly.  HTML editors provided by hosts are notoriously bad.  Its space and bandwidth that people are concerned about, and rightly so.  Most people that are serious about Web sites don&amp;#39;t use the editor that hosts provide them - why when you&amp;#39;ve got Dreamweaver, FrontPage, ...?
    &lt;/p&gt;
    &lt;p&gt;
    If you know you&amp;#39;re going to be away, but will need to update code, try something like the following:
    &lt;/p&gt;
    &lt;p&gt;
    1) Save the file as txt and upload to your server.  Need to make a modification?  Download the file (as txt), make the necessary modifications on the computer you are using, save, and then rename to .html.  Upload the HTML version via your admin interface (or Windows explorer if you&amp;#39;re setup to handle this).  Then rename to .txt and upload your new plaintext doc.  Then delete off of the computer you&amp;#39;re using, unless you&amp;#39;ll be using the same computer to modify code again.
    &lt;/p&gt;
    &lt;p&gt;
    2) Email yourself the HTML doc as an attachment.  I&amp;#39;ve long done this with papers, and doing it with HTML docs is no different.  After all, if you can enter your site admin chances are you can also check your email.
    &lt;/p&gt;
    &lt;p&gt;
    Those are just two suggestions to get around your situation from occurring.  These have worked for me in a variety of situations, and I&amp;#39;m sure they can work for you, and anyone who stumbles upon this post via search like I did, as well :)
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I completely stand behind these comments.  From my own experience, those who rely upon host provided HTML editors either have to or are just beginning with the Internet, or have been using the HTML editor for so long that they can&amp;#39;t work without it.
&lt;/p&gt;
&lt;!--adsense--&gt;
&lt;p&gt;
Those who really care about their code either use a local, versus a Web-based, application to create their HTML.  For some, this means WYSIWYG applications such as FrontPage or Dreamweaver, while for others this means a text editor such as Notepad, WordPad, HTML-Kit, or a slew of other, non-WYSIWYG focused, programs.
&lt;/p&gt;
&lt;p&gt;
There are indeed cases where, however, a hosts HTML editor would be necessary.  For example, if an individual uses a WYSIWYG editor to generate their pages, yet is on a computer that does not have that WYSIWYG editor, they may have to use the host&amp;#39;s editor (for perhaps their HTML knowledge is lacking).
&lt;/p&gt;
&lt;p&gt;
Yet, I don&amp;#39;t believe that such an individual would really care about standards, unless they programmatically cleaned up their normal WYSIWYG&amp;#39;s code, for WYSIWYG programs are notorious for inserting unnecessary code that messes with almost every W3C standard.  Therefore, if someone uses a WYSIWYG, chances are they don&amp;#39;t look at their code all that often anyways.  Of course, there are exceptions.  Yet, I would still argue that one of these exceptions would know enough to not use a host&amp;#39;s editor.
&lt;/p&gt;
&lt;p&gt;
But perhaps I don&amp;#39;t hold hosts to the standards that I should.  Perhaps they should develop HTML editors that don&amp;#39;t mess with people&amp;#39;s code.  Unfortunately, I have had the experience of using such HTML editors that don&amp;#39;t mess with people&amp;#39;s code, as they use a plaintext form to hold the data.  For the vast majority of Web-based HTML editors, however, plaintext forms are going to be of little assistance - they need the WYSIWYG in order to generate their code, and couldn&amp;#39;t care any less about the code itself.
&lt;/p&gt;
&lt;p&gt;
So I suppose I&amp;#39;m trying to say that current host HTML editors serve a purpose, for a niche of individuals.  For those who aren&amp;#39;t in that niche, HTML editors serve little purpose at all, and are not something that gets an individual to choose one host over another.  In fact, I&amp;#39;d be extremely interested in a host that actually has information regarding their Web-based HTML editor.  For the number of years that I&amp;#39;ve been online, and the number of sites that I&amp;#39;ve checked out, I&amp;#39;ve seen not a single reference to the HTML editor that the host uses.  After all, aren&amp;#39;t they pretty much all the same?  Are there really that many people posting to boards saying that x&amp;#39;s HTML editor sucks compared to their old host y?
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>