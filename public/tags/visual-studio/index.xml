<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visual Studio on James Skemp&#39;s Test Hugo-Generated Site</title>
    <link>http://jamesskemp.github.io/words/tags/visual-studio/</link>
    <description>Recent content in Visual Studio on James Skemp&#39;s Test Hugo-Generated Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Oct 2010 15:00:00 -0500</lastBuildDate>
    <atom:link href="http://jamesskemp.github.io/words/tags/visual-studio/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Subversion repository dump: WPF and Silverlight application, with MVVM (revision 25)</title>
      <link>http://jamesskemp.github.io/words/posts/Subversion-repository-dump-WPF-and-Silverlight-application-with-MVVM-revision-25/</link>
      <pubDate>Sun, 24 Oct 2010 15:00:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/posts/Subversion-repository-dump-WPF-and-Silverlight-application-with-MVVM-revision-25/</guid>
      <description>&lt;p&gt;As&amp;nbsp;alluded to&amp;nbsp;in a previous post, &lt;a href=&#34;http://strivinglife.com/words/post/Excellent-Silverlight-WPF-MVVM-video-series.aspx&#34;&gt;in regards to an excellent Silverlight/WPF with MVVM tutorial&lt;/a&gt;, I&#39;ve begun looking into the MVVM pattern, as I begin moving towards WPF and Silverlight for applications.&lt;/p&gt;
&lt;p&gt;Having fully watched the series twice, and begun a third watch working through the example, albeit with the Northwind sample database, I decided to share my labor with others.&lt;/p&gt;
&lt;p&gt;To that end I present a Subversion repository dump with a fairly step-by-step look at how to go from nothing to a simple application with WPF and Silverlight support. Built in Visual Studio 2010, against .NET 4.&lt;/p&gt;
&lt;p&gt;Download the Subversion (version 1.6.13) repository dump: &lt;a rel=&#34;external download&#34; href=&#34;http://media.jamesrskemp.com/download6s/NorthwindExamplesDump_rev25.zip&#34;&gt;NorthwindExamples dump&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The repository currently consists of 25 revisions, and does not &lt;em&gt;yet&lt;/em&gt; include unit testing. (I need to re-watch those particular videos before I implement.) I also made one mistake with the ViewModel class not being public, but ... otherwise it&#39;s not too bad.&lt;/p&gt;
&lt;p&gt;You can also download an export of the repository, again through revision 25: &lt;a rel=&#34;external download&#34; href=&#34;http://media.jamesrskemp.com/download6s/NorthwindExamplesExport_rev25.zip&#34;&gt;NorthwindExamples export&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that you&#39;ll want to set either Northwind.Service or Northwind.WpfClient as the startup projects. If the former, set Northwind.SilverlightTestPage.html as the startup page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Referring to JavaScript documentation in Visual Studio via reference</title>
      <link>http://jamesskemp.github.io/words/posts/Referring-to-JavaScript-documentation-in-Visual-Studio-via-reference/</link>
      <pubDate>Sat, 03 Jul 2010 13:32:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/posts/Referring-to-JavaScript-documentation-in-Visual-Studio-via-reference/</guid>
      <description>&lt;p&gt;While I don&#39;t use Microsoft or Google&#39;s CDNs for jQuery, I do have a separate sub-domain where I serve these files from (and will eventually use a CDN, I&#39;m sure). However, this means that in Visual Studio I miss out on the helpful documentation functionality.&lt;/p&gt;
&lt;p&gt;Based on a comment on &lt;a rel=&#34;external&#34; href=&#34;http://encosia.com/2008/12/10/3-reasons-why-you-should-let-google-host-jquery-for-you/&#34;&gt;3 reasons why you should let Google host jQuery for you&lt;/a&gt; it turns out there&#39;s a fairly easy way to get Intellisense; simply include the following in your JavaScript file.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;js&#34;&gt;/// &amp;lt;Reference Path=&#34;/Scripts/jquery-1.4.1-vsdoc.js&#34;/&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You&#39;ll probably want a copy stored locally so that you can use this without the extra traffic.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to change your default language in Visual Studio 2008 (the right way)</title>
      <link>http://jamesskemp.github.io/words/posts/How-to-change-your-default-language-in-Visual-Studio-2008-the-right-way/</link>
      <pubDate>Wed, 02 Jul 2008 19:40:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/posts/How-to-change-your-default-language-in-Visual-Studio-2008-the-right-way/</guid>
      <description>&lt;p&gt;There&#39;s a number of resources online on how to change the default language in Visual Studio. However, none of them are correct.&lt;/p&gt;
&lt;p&gt;They all state that you should reset your settings to default and then re-setup your settings. Huh?&lt;/p&gt;
&lt;p&gt;Instead, if you modify the CurrentSettings.vssettings file, you can keep all your other settings, without the pain of having to re-import everything else.&lt;/p&gt;
&lt;p&gt;First, find your settings file, which appears to default to the My Documents\Visual Studio &lt;em&gt;x&lt;/em&gt;\Settings\ directory.&lt;/p&gt;
&lt;p&gt;Open CurrentSettings.vssettings in a text or XML editor, and search for DefaultProjectLanguage.&lt;/p&gt;
&lt;p&gt;You can then change the value accordingly. Here are the two options for VB or C#.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;xml&#34;&gt;&amp;lt;PropertyValue name=&#34;DefaultProjectLanguage&#34;&amp;gt;VB&amp;lt;/PropertyValue&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;xml&#34;&gt;&amp;lt;PropertyValue name=&#34;DefaultProjectLanguage&#34;&amp;gt;CSharp&amp;lt;/PropertyValue&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save the file, and once you open Visual Studio, you&#39;re set.&lt;/p&gt;
&lt;p&gt;Now isn&#39;t that easier?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keyboard shortcuts for Visual Studio that mimic Dreamweaver</title>
      <link>http://jamesskemp.github.io/words/posts/Keyboard-shortcuts-for-Visual-Studio-that-mimic-Dreamweaver/</link>
      <pubDate>Wed, 14 May 2008 14:15:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/posts/Keyboard-shortcuts-for-Visual-Studio-that-mimic-Dreamweaver/</guid>
      <description>&lt;p&gt;
I like Dreamweaver. After Notepad, and various other apps like it, I used FrontPage, was scarred, and was saved by Dreamweaver. 
&lt;/p&gt;
&lt;p&gt;
However, Dreamweaver can&amp;#39;t handle .NET files very well. So when I moved to Windows and started using BlogEngine.NET I naturally started looking at how I could edit the source files. 
&lt;/p&gt;
&lt;p&gt;
Visual Web Developer 2005 had been released, so ... 
&lt;/p&gt;
&lt;p&gt;
Skipping forward, I&amp;#39;m starting to work with Visual Studio more and more. 
&lt;/p&gt;
&lt;p&gt;
However, I&amp;#39;ve been using Dreamweaver so long that I&amp;#39;ve gotten used to the shortcuts that I use on a regular basis. 
&lt;/p&gt;
&lt;p&gt;
Ctrl + Shift + P = new paragraph 
&lt;/p&gt;
&lt;p&gt;
Ctrl + 1 (through 6) = new h1 (through h6)
&lt;/p&gt;
&lt;p&gt;
Unfortunately, it doesn&amp;#39;t seem that you can map these to keyboard shortcuts in Visual Studio. 
&lt;/p&gt;
&lt;p&gt;
Grr ...
&lt;/p&gt;
&lt;p&gt;
Does anyone out there know how to map these specific functions?
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Visual Studio 2008 Preferences</title>
      <link>http://jamesskemp.github.io/words/posts/My-Visual-Studio-2008-Preferences/</link>
      <pubDate>Sat, 19 Apr 2008 10:50:00 -0500</pubDate>
      
      <guid>http://jamesskemp.github.io/words/posts/My-Visual-Studio-2008-Preferences/</guid>
      <description>&lt;p&gt;
This is almost purely for my own benefit. 
&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
    &lt;div&gt;
    Tools &amp;gt; Options (showing all settings) 
    &lt;/div&gt;
    &lt;ul&gt;
        &lt;li&gt;
        &lt;div&gt;
        Environment &amp;gt; General 
        &lt;/div&gt;
        &lt;ul&gt;
            &lt;li&gt;
            &lt;div&gt;
            &amp;nbsp;Animate environment tools (unchecked) 
            &lt;/div&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;div&gt;
        Environment &amp;gt; Startup 
        &lt;/div&gt;
        &lt;ul&gt;
            &lt;li&gt;
            &lt;div&gt;
            At startup: Show empty environment 
            &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;div&gt;
            Download content every: (unchecked) 
            &lt;/div&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;div&gt;
        Projects and Solutions &amp;gt; Build and Run 
        &lt;/div&gt;
        &lt;ul&gt;
            &lt;li&gt;
            &lt;div&gt;
            Before building: Prompt to save all changes 
            &lt;/div&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;div&gt;
        Text Editor &amp;gt; All Languages
        &lt;/div&gt;
        &lt;ul&gt;
            &lt;li&gt;
            &lt;div&gt;
            &amp;nbsp;Display: Line numbers (checked)
            &lt;/div&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;div&gt;
        Text Editor &amp;gt; All Languages &amp;gt; Tabs 
        &lt;/div&gt;
        &lt;ul&gt;
            &lt;li&gt;
            &lt;div&gt;
            Indenting: Smart 
            &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;div&gt;
            Tab: 
            &lt;/div&gt;
            &lt;ul&gt;
                &lt;li&gt;
                &lt;div&gt;
                Tab size: 4 
                &lt;/div&gt;
                &lt;/li&gt;
                &lt;li&gt;
                &lt;div&gt;
                Indent size: 4 
                &lt;/div&gt;
                &lt;/li&gt;
                &lt;li&gt;
                &lt;div&gt;
                Keep tabs 
                &lt;/div&gt;
                &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;div&gt;
        Text Editor &amp;gt; C# &amp;gt; New Lines 
        &lt;/div&gt;
        &lt;ul&gt;
            &lt;li&gt;
            &lt;div&gt;
            New line options for braces&amp;nbsp;(uncheck all) 
            &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;div&gt;
            New line options for keywords (uncheck all) 
            &lt;/div&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;div&gt;
        Text Editor &amp;gt; CSS &amp;gt; Format 
        &lt;/div&gt;
        &lt;ul&gt;
            &lt;li&gt;
            &lt;div&gt;
            Style: Semi-expanded 
            &lt;/div&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;div&gt;
        Text Editor &amp;gt; HTML 
        &lt;/div&gt;
        &lt;ul&gt;
            &lt;li&gt;Format 
            &lt;ul&gt;
                &lt;li&gt;&lt;strike&gt;Insert attribute value quotes when typing (unchecked)&lt;/strike&gt;&lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;li&gt;Miscellaneous 
            &lt;ul&gt;
                &lt;li&gt;&lt;strike&gt;Auto ID elements on paste in Source view (unchecked) &lt;/strike&gt;&lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
All other settings are left to default. 
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
