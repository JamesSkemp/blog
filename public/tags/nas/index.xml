<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nas on James Skemp&#39;s Test Hugo-Generated Site</title>
    <link>http://jamesskemp.github.io/blog/tags/nas/</link>
    <description>Recent content in Nas on James Skemp&#39;s Test Hugo-Generated Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Jan 2016 12:17:57 -0600</lastBuildDate>
    <atom:link href="http://jamesskemp.github.io/blog/tags/nas/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Setting up a Raspberry Pi 2 Samba server (in early January 2016)</title>
      <link>http://jamesskemp.github.io/blog/posts/Setting-up-a-Raspberry-Pi-2-Samba-server-%28in-early-January-2016%29/</link>
      <pubDate>Sat, 09 Jan 2016 12:17:57 -0600</pubDate>
      
      <guid>http://jamesskemp.github.io/blog/posts/Setting-up-a-Raspberry-Pi-2-Samba-server-%28in-early-January-2016%29/</guid>
      <description>&lt;p&gt;The following is how I configured a Raspberry Pi 2 as a samba server, using a Seagate Backup Plus Slim, 1TB, drive.&lt;/p&gt;

&lt;p&gt;For ease I purchased the &lt;a href=&#34;http://amzn.to/1MZjXM0&#34;&gt;CanaKit Raspberry Pi 2 Complete Starter Kit&lt;/a&gt;. It runs about $70 and includes enough to get up and running with the Raspberry Pi 2, with the Pi itself, a nice case, power supply, HDMI cable, WiFi adapter, and SD card with NOOBS/Raspbian installer.&lt;/p&gt;

&lt;p&gt;For the hard drive I opted to purchase a &lt;a href=&#34;http://amzn.to/1MZkg9F&#34;&gt;Seagate Backup Plus Slim 1TB Portable External Hard Drive&lt;/a&gt;, since I&#39;ve had good enough luck with Seagate in the past, and reviews are generally favorable. This ran me $60. I confirmed that it worked fine on my Windows 10 machine, and was already formatted to NTFS.&lt;/p&gt;

&lt;p&gt;Unfortunately, once I received the Pi and drive I found that the power supply/Pi wasn&#39;t putting off enough power to keep the drive running. After looking at the options, including tweaking the Pi to pass through more power through the USB connector, I opted to pick up a powered USB hub instead (especially since I was considering setting up a camera at some point in the future).&lt;/p&gt;

&lt;p&gt;For this I went with the &lt;a href=&#34;http://amzn.to/1MZktd6&#34;&gt;AmazonBasics 4 Port USB 3.0 Hub with 5V/2.5A power adapter&lt;/a&gt; for about $17. Reviews are quite favorable, and I didn&#39;t see any indication that it wouldn&#39;t work. Once I received the included manual does note that Windows 2000 through 8 are required, or Mac OS X. However, as you&#39;ll see there were no issues.&lt;/p&gt;

&lt;p&gt;Before powering my Raspberry Pi 2 up I went ahead and plugged the USB Hub into the Pi, and the Seagate Backup Plus into the HUB. I powered up the HUB first, and then powered up the Pi.&lt;/p&gt;

&lt;p&gt;While it was a couple years old, &lt;a href=&#34;http://www.howtogeek.com/139433/how-to-turn-a-raspberry-pi-into-a-low-power-network-storage-device/&#34;&gt;How to Turn a Raspberry Pi into a Low-Power Network Storage Device&lt;/a&gt; worked fairly well for the setup steps.&lt;/p&gt;

&lt;h2&gt;Setup commands&lt;/h2&gt;

&lt;p&gt;Unless otherwise noted, all commands were run on the Raspberry Pi 2 itself, at the command line, outside of Raspbian.&lt;/p&gt;

&lt;p&gt;While the guide suggests installing &lt;strong&gt;ntfs-3g&lt;/strong&gt;, this was already installed on my Pi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install ntfs-3g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Getting a listing of the disks, &lt;code&gt;sudo fdisk -l&lt;/code&gt;, returned /dev/sda1 for the name of the Seagate drive. So, despite a moment of worry, the Amazon USB Hub worked perfectly fine.&lt;/p&gt;

&lt;p&gt;The next step was to setup the drive. I opted for all lowercase when doing so.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /media/usbhdd1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next was the mounting of the drive.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mount -t auto /dev/sda1 /media/usbhdd1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Within the directory I setup a new shares directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /media/usbhdd1/shares
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When I first tried to install Samba I received a number of errors. A quick update resolved the issues.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I was able to install Samba.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install samba samba-common-bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Backup the Samba configuration, just in case, and then open the config in &lt;strong&gt;nano&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.old
sudo nano /etc/samba/smb.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My Windows 10 machine was already on the WORKGROUP workgroup, so I didn&#39;t have to touch this, but verify &lt;em&gt;workgroup&lt;/em&gt; is set as needed.&lt;/p&gt;

&lt;p&gt;Contrary to the guide I was unable to find a security line in the Authenication section, so I skipped that for now, and promised to try to get in without authenticating before I went too far.&lt;/p&gt;

&lt;p&gt;At the bottom of the config I added the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Backup1]
comment = Backup Folder
path = /media/usbhdd1/shares
valid users = @users
force group = users
create mask = 0660
directory mask = 0771
read only = no
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;CTRL+X&lt;/code&gt; will exit, and allow you to save. Press &lt;code&gt;Enter&lt;/code&gt; to just overwrite the existing file.&lt;/p&gt;

&lt;p&gt;Restart the Samba service:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/samba restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now setup a user account in UNIX and then for Samba. Yes, this means entering the password 4 times. Personally, I&#39;m a fan of &lt;a href=&#34;http://preshing.com/20110811/xkcd-password-generator/&#34;&gt;Preshing&#39;s xkcd Password Generator&lt;/a&gt; and storing the credentials in &lt;a href=&#34;http://keepass.info/&#34;&gt;KeePass&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo useradd backups -m -G users
sudo passwd backups
sudo smbpasswd -a backups
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For ease I then determined the ip of the Raspberry Pi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ifconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then I just browsed to that directly in Windows explorer (&lt;code&gt;\\192.168.x.x&lt;/code&gt;). Thankfully I was prompted for credentials when I tried to access the &lt;strong&gt;Backup1&lt;/strong&gt; directory. Entering the credentials I had created above worked great.&lt;/p&gt;

&lt;p&gt;The next step was to put some data in the directory. Over my wireless network speeds weren&#39;t fantastic, but it worked fine.&lt;/p&gt;

&lt;p&gt;I verified the files had been copied over:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /media/usbhdd1/shares
ls
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next was a step I almost forgot, which was to have the Raspberry Pi automatically mount the drive after rebooting. The config first needed to be opened in nano, &lt;code&gt;sudo nano /etc/fstab&lt;/code&gt;, and then I had to add the following, which I did so at the end of the file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/dev/sda1    /media/usbhdd1     auto    noatime     0       0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Ctrl + x&lt;/code&gt; as usual to exit, save, and overwrite the existing file.&lt;/p&gt;

&lt;p&gt;Finally, restart the Raspberry Pi itself to verify that I could still get to the share after it came back up.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo reboot&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
