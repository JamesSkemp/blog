<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>James Skemp&#39;s StrivingLife</title>
    <link>http://words.strivinglife.com/tags/linq-to-xml/index.xml</link>
    <description>Recent content on James Skemp&#39;s StrivingLife</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All content copyright 1999-2016 James Skemp, unless otherwise noted. This work is licensed under the Creative Commons License Attribution-Noncommercial-No Derivative Works 3.0.</copyright>
    <atom:link href="/tags/linq-to-xml/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>iTunes Playlists to Xml: Parsing categories with LINQ</title>
      <link>http://words.strivinglife.com/post/iTunes-Playlists-to-Xml-Parsing-categories-with-LINQ/</link>
      <pubDate>Wed, 20 Oct 2010 08:35:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/iTunes-Playlists-to-Xml-Parsing-categories-with-LINQ/</guid>
      <description>LINQ to parse the XML export from iTunes Playlists to Xml for musical genres/categories.</description>
    </item>
    
    <item>
      <title>Vehicle gas DTD .NET objects and XML parsing with LINQ</title>
      <link>http://words.strivinglife.com/post/Vehicle-gas-DTD-NET-objects-and-XML-parsing-with-LINQ/</link>
      <pubDate>Thu, 10 Jun 2010 22:20:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/Vehicle-gas-DTD-NET-objects-and-XML-parsing-with-LINQ/</guid>
      <description>Having created an XML document, with DTD, to store vehicle fillups, here&#39;s a look at a rough object and how to parse them out of XML via LINQ.</description>
    </item>
    
    <item>
      <title>Determine BlogEngine.NET comments that haven&#39;t been published - with LINQPad</title>
      <link>http://words.strivinglife.com/post/Determine-BlogEngineNET-comments-that-havent-been-published-now-with-LINQPad/</link>
      <pubDate>Thu, 31 Dec 2009 14:20:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/Determine-BlogEngineNET-comments-that-havent-been-published-now-with-LINQPad/</guid>
      <description>Find all BlogEngine.NET posts with unapproved comments using this code and LINQPad.</description>
    </item>
    
    <item>
      <title>Determine BlogEngine.NET comments that haven&#39;t been published</title>
      <link>http://words.strivinglife.com/post/Determine-BlogEngineNET-comments-that-havent-been-published/</link>
      <pubDate>Sun, 06 Dec 2009 15:55:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/Determine-BlogEngineNET-comments-that-havent-been-published/</guid>
      <description>C# code to parse a directory of BlogEngine.NET posts (determined by the user selecting one) for unapproved comments.</description>
    </item>
    
    <item>
      <title>Parsing Yahoo! Music&#39;s Artist Web Services with C# and LINQ to XML - Search for artists</title>
      <link>http://words.strivinglife.com/post/Parsing-Yahoo%21-Musics-Artist-Web-Services-with-C-and-LINQ-to-XML-Search-for-artists/</link>
      <pubDate>Sat, 12 Sep 2009 21:30:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/Parsing-Yahoo%21-Musics-Artist-Web-Services-with-C-and-LINQ-to-XML-Search-for-artists/</guid>
      <description>Example of parsing Yahoo! Music&#39;s Search for artists Web service method, with C# and LINQ to XML. [slnet0514:3fb52809-c1d8-42e8-9560-7461a68a0020]</description>
    </item>
    
    <item>
      <title>Parsing Last.fm Web Services&#39; artist.getSimilar with C# and LINQ to XML</title>
      <link>http://words.strivinglife.com/post/Parsing-Lastfm-Web-Services-artistgetSimilar-with-C-and-LINQ-to-XML/</link>
      <pubDate>Sat, 12 Sep 2009 16:33:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/Parsing-Lastfm-Web-Services-artistgetSimilar-with-C-and-LINQ-to-XML/</guid>
      <description>How to programmatically make a request to Last.fm&#39;s Web Services for similar artists, and parse the response with LINQ to XML, using C# and .NET Framework 3.5</description>
    </item>
    
  </channel>
</rss>