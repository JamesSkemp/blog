<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on James Skemp&#39;s Test Hugo-Generated Site</title>
    <link>http://words.strivinglife.com/tags/php/</link>
    <description>Recent content in Php on James Skemp&#39;s Test Hugo-Generated Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Sep 2010 20:15:00 -0500</lastBuildDate>
    <atom:link href="http://words.strivinglife.com/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Extended iTunes Track class for PHP</title>
      <link>http://words.strivinglife.com/post/Extended-iTunes-Track-class-for-PHP/</link>
      <pubDate>Sun, 26 Sep 2010 20:15:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/Extended-iTunes-Track-class-for-PHP/</guid>
      <description>&lt;p&gt;In a previous article, I had outlined&amp;nbsp;&lt;a href=&#34;http://strivinglife.com/words/post/iTunes-Track-class-in-C-sharp-and-PHP.aspx&#34;&gt;classes in C# and PHP to handle&amp;nbsp;iTunes Playlists to Xml outputs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Having let it sit on the back burner for long enough, I finally went back to the PHP class and finalized the constructor. I also added two functions for sorting.&lt;/p&gt;
&lt;p&gt;Below I have the current code for the class (a &lt;a rel=&#34;external download&#34; href=&#34;http://media.jamesrskemp.com/articles/Track.php.txt&#34;&gt;current version of the Track class for PHP&lt;/a&gt; will always be available elsewhere) and then an example implementation.&lt;/p&gt;
&lt;h3&gt;Track class for PHP, version 1.0&lt;/h3&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php
/**
 * Music track object.
 *
 * @author James Skemp - http://jamesrskemp.com
 * @license http://creativecommons.org/licenses/by/3.0/us/
 * @version 1.0
 */
class Track {
    /**
     * How long the track is.
     * @var string
     */
    var $Time;
    /**
     * Name or title of the track.
     * @var string
     */
    var $Name;
    /**
     * Name of the artist.
     * @var string
     */
    var $Artist;
    /**
     * Rating assigned to the track by the playlist&#39;s owner.
     * @var int
     */
    var $Rating;
    /**
     * Number of times the track has been played.
     * @var int
     */
    var $PlayCount;
    /**
     * Date and time the track was last played (and finished).
     */
    var $LastPlayed;
    /**
     * Name of the album the track is from.
     * @var string
     */
    var $Album;
    /**
     * True if the album the track is on is a compilation, false otherwise.
     * @var bool
     */
    var $Compilation;
    /**
     * Order this track is on the album.
     * @var int
     */
    var $TrackNumber;
    /**
     * Total number of tracks on the album.
     * @var int
     */
    var $TrackCount;
    /**
     * The album disc the track is on.
     * @var int
     */
    var $DiscNumber;
    /**
     * Total number of discs in the album.
     * @var int
     */
    var $DiscCount;
    /**
     * Year the track/album was released/published.
     * @var int
     */
    var $Year;
    /**
     * Genre of music the track falls into.
     * @var string
     */
    var $Genre;
    /**
     * Date and time the track was added.
     */
    var $DateAdded;

    public function  __get($name) {
        return $this-&amp;gt;$name;
    }

    public function  __set($name, $value) {
        $this-&amp;gt;$name = $value;
    }

    /**
     * Constructs a Track object from an iTunes Playlists to Xml XML output file.
     *
     * @param object $xml
     */
    function __construct($xml) {
        $this-&amp;gt;Name = (string)$xml-&amp;gt;name;
        $this-&amp;gt;Album = (string)$xml-&amp;gt;album;
        $this-&amp;gt;Artist = (string)$xml-&amp;gt;artist;
        $this-&amp;gt;Time = (string)$xml[&#39;time&#39;];
        $this-&amp;gt;Rating = (int)$xml-&amp;gt;rating;
        $this-&amp;gt;PlayCount = (int)$xml-&amp;gt;playCount;
        $this-&amp;gt;LastPlayed = (string)$xml-&amp;gt;lastPlayed;
        $this-&amp;gt;Compilation = (bool)$xml-&amp;gt;compilation;
        $this-&amp;gt;TrackNumber = (int)$xml-&amp;gt;trackNumber;
        $this-&amp;gt;TrackCount = (int)$xml-&amp;gt;trackCount;
        $this-&amp;gt;DiscNumber = (int)$xml-&amp;gt;discNumber;
        $this-&amp;gt;DiscCount = (int)$xml-&amp;gt;discCount;
        $this-&amp;gt;Year = (int)$xml-&amp;gt;year;
        $this-&amp;gt;Genre = (string)$xml-&amp;gt;genre;
        $this-&amp;gt;DateAdded = (string)$xml-&amp;gt;dateAdded;
    }

    /**
     * Function for sorting Track objects by PlayCount, ascending. Uses LastPlayed for ties.
     *
     * @access public
     * @param Track $x First object to compare.
     * @param Track $y Second object to compare.
     * @return integer Standard sorting returns.
     */
    public function SortPlayCountAsc($x, $y) {
        if ($x-&amp;gt;PlayCount == $y-&amp;gt;PlayCount) {
            if ($x-&amp;gt;LastPlayed == $y-&amp;gt;LastPlayed) {
                return 0;
            } else if ($x-&amp;gt;LastPlayed &amp;lt; $y-&amp;gt;LastPlayed) {
                return -1;
            } else {
                return 1;
            }
        } else if ($x-&amp;gt;PlayCount &amp;lt; $y-&amp;gt;PlayCount) {
            return -1;
        } else {
            return 1;
        }
    }

    /**
     * Function for sorting Track objects by PlayCount, descending. Uses LastPlayed for ties.
     *
     * @access public
     * @param Track $x First object to compare.
     * @param Track $y Second object to compare.
     * @return integer Standard sorting returns.
     */
    public function SortPlayCountDesc($x, $y) {
        if ($x-&amp;gt;PlayCount == $y-&amp;gt;PlayCount) {
            if ($x-&amp;gt;LastPlayed == $y-&amp;gt;LastPlayed) {
                return 0;
            } else if ($x-&amp;gt;LastPlayed &amp;gt; $y-&amp;gt;LastPlayed) {
                return -1;
            } else {
                return 1;
            }
        } else if ($x-&amp;gt;PlayCount &amp;lt; $y-&amp;gt;PlayCount) {
            return 1;
        } else {
            return -1;
        }
    }
}
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Usage example&lt;/h3&gt;
&lt;p&gt;Update XML file location as necessary. Note also I&#39;m using the &lt;a rel=&#34;external&#34; href=&#34;http://www.iis.net/download/wincacheforphp&#34;&gt;Windows Cache Extension for PHP&lt;/a&gt;. Modify the initial if statement accordingly if running in an environment that does not have this enabled.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php include_once &#39;Track.php&#39;; ?&amp;gt;
&amp;lt;!DOCTYPE HTML PUBLIC &#34;-//W3C//DTD HTML 4.01 Transitional//EN&#34;&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=UTF-8&#34;&amp;gt;
        &amp;lt;title&amp;gt;Track class example&amp;lt;/title&amp;gt;
        &amp;lt;style type=&#34;text/css&#34;&amp;gt;
            .error {
                color:red;
            }
        &amp;lt;/style&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;?php
            $tracks = array();

            // Determine if we&#39;ve already grabbed this for the user and either pull or populate their cache.
            if (!wincache_ucache_exists(&#39;tracksData&#39;)) {
                $xml = @simplexml_load_file(&#39;playlistXml-2010-09-25T15-26-50.xml&#39;);

                if (!$xml) {
                    echo &#39;&amp;lt;p class=&#34;error&#34;&amp;gt;Could not load XML data.&amp;lt;/p&amp;gt;&#39;;
                } else {
                    echo &#34;Start creating array of tracks.&amp;lt;br /&amp;gt;&#34;;

                    foreach($xml-&amp;gt;track as $trackXml) {
                        $tracks[] = new Track($trackXml);
                    }
                    unset($trackXml);

                    echo &#34;Finished creating array of tracks.&amp;lt;br /&amp;gt;&#34;;

                    wincache_ucache_set(&#39;tracksData&#39;, $tracks);
                }
                unset($xml);
            } else {
                $tracks = wincache_ucache_get(&#39;tracksData&#39;);
            }

            echo &#34;Count = &#34;.count($tracks).&#34;&amp;lt;br /&amp;gt;&#34;;

            usort($tracks, array(&#39;Track&#39;, &#39;SortPlayCountDesc&#39;));

            echo &#34;&amp;lt;pre&amp;gt;&#34;;
            //var_dump($tracks[2]);
            echo &#34;&amp;lt;/pre&amp;gt;&#34;;

            echo &#34;&amp;lt;pre&amp;gt;&#34;;
            for ($i = 0; $i &amp;lt; 10; $i++) {
                var_dump($tracks[$i]);
            }
            unset($i);

            unset($tracks);
        ?&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Memory usage seems a bit high at the end of this script, but ... at this point I&#39;m not sure what the fix is.&lt;/p&gt;
&lt;p&gt;The fact that PHP doesn&#39;t have an easy way to&amp;nbsp;store data in an&amp;nbsp;application cache (in memory) is rather disappointing, so other than fixing minor bugs, I don&#39;t expect I&#39;ll expand too much on this implementation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>iTunes Track class in C# and PHP</title>
      <link>http://words.strivinglife.com/post/iTunes-Track-class-in-C-sharp-and-PHP/</link>
      <pubDate>Wed, 08 Sep 2010 22:25:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/iTunes-Track-class-in-C-sharp-and-PHP/</guid>
      <description>&lt;p&gt;I&#39;ve recently begun reading up on PHP again. As I&#39;m most fond of my iTunes Playlists to Xml application, I thought I&#39;d work with that application&#39;s output - XML files with playlist data - as I continued to dig into PHP (instead of stopping now that I know enough to tweak existing code and create new functionality).&lt;/p&gt;
&lt;p&gt;Here&#39;s a basic Track object in C# and PHP. I&#39;ll of course be elaborating on these as time goes by (and already have code for the C# implementation).&lt;/p&gt;
&lt;h3&gt;Track class in C#&lt;/h3&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;csharp&#34;&gt;/// &amp;lt;summary&amp;gt;
/// Music track object.
/// &amp;lt;/summary&amp;gt;
public class Track {
    #region Properties
    /// &amp;lt;summary&amp;gt;
    /// How long the track is.
    /// &amp;lt;/summary&amp;gt;
    public String Time { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Name or title of the track.
    /// &amp;lt;/summary&amp;gt;
    public String Name { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Name of the artist.
    /// &amp;lt;/summary&amp;gt;
    public String Artist { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Rating assigned to the track by the playlist&#39;s owner.
    /// &amp;lt;/summary&amp;gt;
    public int Rating { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Number of times the track has been played.
    /// &amp;lt;/summary&amp;gt;
    public int PlayCount { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Date and time the track was last played (and finished).
    /// &amp;lt;/summary&amp;gt;
    public DateTime LastPlayed { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Name of the album the track is from.
    /// &amp;lt;/summary&amp;gt;
    public String Album { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// True if the album the track is on is a compilation, false otherwise.
    /// &amp;lt;/summary&amp;gt;
    public Boolean Compilation { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Order this track is on the album.
    /// &amp;lt;/summary&amp;gt;
    public int TrackNumber { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Total number of tracks on the album.
    /// &amp;lt;/summary&amp;gt;
    public int TrackCount { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// The album disc the track is on.
    /// &amp;lt;/summary&amp;gt;
    public int DiscNumber { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Total number of discs in the album.
    /// &amp;lt;/summary&amp;gt;
    public int DiscCount { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Year the track/album was released/published.
    /// &amp;lt;/summary&amp;gt;
    public int Year { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Genre of music the track falls into.
    /// &amp;lt;/summary&amp;gt;
    public String Genre { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// Date and time the track was added.
    /// &amp;lt;/summary&amp;gt;
    public DateTime DateAdded { get; set; }
    #endregion
}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Track class in PHP&lt;/h3&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php
/**
 * Music track object.
 *
 * @author James Skemp
 */
class Track {
    /**
     * How long the track is.
     * @var string
     */
    var $Time;
    /**
     * Name or title of the track.
     * @var string
     */
    var $Name;
    /**
     * Name of the artist.
     * @var string
     */
    var $Artist;
    /**
     * Rating assigned to the track by the playlist&#39;s owner.
     * @var int
     */
    var $Rating;
    /**
     * Number of times the track has been played.
     * @var int
     */
    var $PlayCount;
    /**
     * Date and time the track was last played (and finished).
     */
    var $LastPlayed;
    /**
     * Name of the album the track is from.
     * @var string
     */
    var $Album;
    /**
     * True if the album the track is on is a compilation, false otherwise.
     * @var bool
     */
    var $Compilation;
    /**
     * Order this track is on the album.
     * @var int
     */
    var $TrackNumber;
    /**
     * Total number of tracks on the album.
     * @var int
     */
    var $TrackCount;
    /**
     * The album disc the track is on.
     * @var int
     */
    var $DiscNumber;
    /**
     * Total number of discs in the album.
     * @var int
     */
    var $DiscCount;
    /**
     * Year the track/album was released/published.
     * @var int
     */
    var $Year;
    /**
     * Genre of music the track falls into.
     * @var string
     */
    var $Genre;
    /**
     * Date and time the track was added.
     */
    var $DateAdded;
    
    //todo
}
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Comments appreciated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enabling PHP file_put_contents() support on IIS 7.5 on Windows Server 2008 R2</title>
      <link>http://words.strivinglife.com/post/Enabling-PHP-file_put_contents-support-on-IIS-75-on-Windows-Server-2008-R2/</link>
      <pubDate>Wed, 01 Sep 2010 21:20:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/Enabling-PHP-file_put_contents-support-on-IIS-75-on-Windows-Server-2008-R2/</guid>
      <description>&lt;p&gt;I&#39;ve already installed the current verison of PHP 5.2 on my Windows Server 2008 R2 machine, but unfortunately wasn&#39;t able to get content saved via the file_put_contents function.&lt;/p&gt;
&lt;p&gt;It seems that you need to add and give IUSR the necessary permissions on the file (or directory) in order for writes to work properly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrading PHP (4.4.2 to 4.4.4 and 5.1.4 to 5.2.0)</title>
      <link>http://words.strivinglife.com/post/Upgrading-PHP-%28442-to-444-and-514-to-520%29/</link>
      <pubDate>Sun, 26 Nov 2006 17:00:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/Upgrading-PHP-%28442-to-444-and-514-to-520%29/</guid>
      <description>&lt;p&gt;In this article, we&#39;ll be upgrading PHP on our local, Windows, Web server. In previous guides we installed PHP 4.4.2 as well as PHP 5.1.4, both on the same machine, with the ability to switch as we like. However, we&#39;ve yet to cover how to upgrade either installation (and upgrading is definitely a need).&lt;/p&gt;
&lt;p&gt;At the time of this writing, the current versions of PHP are 4.4.4 and 5.2.0, for the 4.x and 5.x versions, respectively.&lt;/p&gt;
&lt;p&gt;We&#39;ll be going over the upgrade for each version separately, so you can simply skip to which version you&#39;re currently using.&lt;/p&gt;
&lt;h4&gt;Upgrading PHP 4.4.2 to PHP 4.4.4&lt;/h4&gt;
&lt;p&gt;First off, make sure that Apache has been stopped.&lt;!--adsense--&gt;&lt;/p&gt;
&lt;p&gt;Now, rename the directory where you&#39;ve installed PHP 4.x to ... have the suffix of &#39;-previous&#39; (for example, c:\php4-previous\). We&#39;ll do this, instead of installing over the directory so that we have a backup copy, as well as a &#39;clean&#39; version of the install directory.&lt;/p&gt;
&lt;p&gt;Next, you should have, or should, download the Windows binary in zip format, for the most current version of PHP 4.x (4.4.4 at the time of this writing). Extract the contents of this folder so that you have the same directory structure as before.&lt;/p&gt;
&lt;p&gt;For example, for the previous version of PHP, my php.exe file was at c:\php4\php.exe. For the new install, I&#39;ll want php.exe to be in the same location.&lt;/p&gt;
&lt;p&gt;Once that&#39;s done, we&#39;ll want to grab the php4apache.dll and/or php4apache2.dll files from our previous install directory and put a copy of them into our new install directory.&lt;/p&gt;
&lt;p&gt;For the new version of PHP 4.x, make a copy the php4ts.dll file and put the copy in the Windows folder (c:\windows\).&lt;/p&gt;
&lt;p&gt;Next, there&#39;s the matter of the php.ini file. At this point, I did a compare of the new version&#39;s file with the previous version&#39;s file (php.ini-dist) using &lt;a href=&#34;http://strivinglife.net/wordpress/2006/10/16/249/winmerge-26-released/&#34;&gt;WinMerge&lt;/a&gt;. Luckily, the two files are identical, so there&#39;s no updating necessary.&lt;/p&gt;
&lt;p&gt;At this point, you can start up Apache and hit your phpinfo page (code listed below). You should see that PHP&#39;s version has been updated to 4.4.4. If you&#39;d like, you can also test your connection to the database server of your choice (MySQL and/or PostgreSQL).&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php
phpinfo();
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we&#39;re set with our new version of PHP 4.x, you can either delete, or as I recommend, archive, your old PHP install directory, just in case something comes up in the next couple of weeks. Also, if you have any non-core extensions, you&#39;ll want to make sure that those get moved over as well.&lt;/p&gt;
&lt;p&gt;Next, we&#39;ve got our PHP 5.x installation to upgrade.&lt;!--nextpage--&gt;&lt;/p&gt;
&lt;h4&gt;Upgrading PHP 5.1.4 to PHP 5.2.0&lt;/h4&gt;
&lt;p&gt;Upgrading PHP 5.x is almost exactly the same as upgrading PHP 4.x.&lt;/p&gt;
&lt;p&gt;First, make sure that Apache has been stopped. Next, rename your current PHP 5.x directory (I added &#39;-previous&#39; to the end of my directory&#39;s name). If you don&#39;t already have a copy, download the Windows PHP 5.x binaries and extract them so that you preserve the same file structure as before.&lt;/p&gt;
&lt;p&gt;For example, php.exe was located at c:\php5\php.exe for my previous version, so that&#39;s also where it should sit in the new directory.&lt;/p&gt;
&lt;p&gt;Next, make a copy of the php5ts.dll file and put it into the Windows directory (c:\windows\ for example), overwriting the old one. If you installed any extensions, copy those extensions over from your previous install&#39;s directory to your new install&#39;s directory.&lt;/p&gt;
&lt;p&gt;Now there&#39;s the matter of the php.ini file. At this point, I did a compare of the new version&#39;s file with the previous version&#39;s file (php.ini-dist) using &lt;a href=&#34;http://strivinglife.net/wordpress/2006/10/16/249/winmerge-26-released/&#34;&gt;WinMerge&lt;/a&gt; and there&#39;s a number of changes.&lt;/p&gt;
&lt;p&gt;So, what you&#39;ll want to do is compare your PHP.ini file with the php.ini-dist file from the previous version, so we can get an idea of what changes were made. Now, make a copy of the new php.ini-dist and make the same changes you&#39;ve made for the old version.&lt;/p&gt;
&lt;p&gt;For example, six changes had been made to my php.ini file, which I&#39;ve listed below.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;doc_root
extension_dir
extension=php_mysql.dll
extension=php_pgsql.dll
session.save_path
[Zend]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you&#39;ve ported over all of your changes, make a backup of your old php.ini file and replace it with the updated version. You can now restart Apache (2) and verify using phpinfo() that your version has been upgraded. You&#39;ll also want to check your database connection(s) as well.&lt;/p&gt;
&lt;p&gt;And with that, you&#39;ve updated PHP 5.x.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://strivinglife.net/wordpress/a-local-apache-web-server-on-a-windows-xp-computer/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Forum Software Showdown Part 6: phpBB</title>
      <link>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-6-phpBB/</link>
      <pubDate>Sat, 25 Nov 2006 18:30:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-6-phpBB/</guid>
      <description>&lt;p&gt;It&#39;s that time again. This time, we&#39;ll be looking at &lt;a rel=&#34;external&#34; href=&#34;http://www.phpbb.com/&#34;&gt;phpBB&lt;/a&gt;. &amp;ldquo;phpBB is a high powered, fully scalable, and highly customizable Open Source bulletin board package. phpBB has a user-friendly interface, simple and straightforward administration panel, and helpful FAQ. Based on the powerful PHP server language and your choice of MySQL, MS-SQL, PostgreSQL or Access/ODBC database servers, phpBB is the ideal free community solution for all web sites.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Lot&#39;s of features, so let&#39;s get to it. In this article, we&#39;ll be installing phpBB version 2.0.21, which is the latest version, as of June 9, 2006. A beta version of 3.0 came out a very short period before this article was written, otherwise I don&#39;t know that phpBB would have made it. Anywho, on with it.&lt;/p&gt;
&lt;h3&gt;File and folder size&lt;/h3&gt;
&lt;p&gt;The zip file for phpBB weighs in at around 650 KB. Unzipped, we&#39;re looking at almost 2 MB. The zip file contains a single phpBB2 folder, so extract away. phpBB is also available in gzip and bz2 formats.&lt;/p&gt;
&lt;h3&gt;Requirements&lt;/h3&gt;
&lt;p&gt;Check out these requirements. PHP 4.0.3+ and one of these database systems; MySQL 3.22+ or PostgreSQL 7.0.3+ or MS SQL Server 7+ or MS Access 2000+&lt;/p&gt;
&lt;h3&gt;Installing on our local Web server&lt;/h3&gt;
&lt;p&gt;Unlike past articles, for these forum reviews we&#39;re going to create the necessary users and databases using the command line interface of MySQL. If you&#39;re going to be installing these forums to a remote system, just create the user(s) and database(s) as usual (and that goes for if you&#39;re installing it locally as well).&lt;/p&gt;
&lt;h3&gt;Creating the user and database via the command-line&lt;/h3&gt;
&lt;p&gt;First, you&#39;ll need to login to MySQL. Open up the Run prompt by going to Start &amp;gt; Run ... and type &lt;strong&gt;cmd&lt;/strong&gt;, then press Enter. At the prompt, if you&#39;ve setup MySQL correctly, you can type the following command, followed by pressing Enter.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;mysql -h localhost -u root -p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, you&#39;ll be prompted to enter your password, which you&#39;ll have already setup. Enter your password and press Enter.&lt;/p&gt;
&lt;p&gt;At this point, you&#39;re logged into MySQL. Now, we can create our database, create our user, and grant the user privilege to modify the database we created.&lt;/p&gt;
&lt;p&gt;Since we&#39;re installing phpBB, we&#39;ll create a database called phpBB.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;sql&#34;&gt;create database phpBB;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, you&#39;ll be told that &amp;ldquo;Query OK, 1 row affected&amp;rdquo;, followed by the execution time.&lt;/p&gt;
&lt;p&gt;Now, we&#39;ll create a user with privileges to access the database. Note that other than the bold text, this command is case-insensitive. Also, you may want to change &#39;&lt;strong&gt;phpbb&lt;/strong&gt;&#39; to something different (as this is the user&#39;s password).&lt;/p&gt;
&lt;p&gt;Before you enter this, look it over, and then read the paragraph following, for an explanation.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;sql&#34;&gt;GRANT select, insert, update, delete, index, alter, create, drop
ON &lt;strong&gt;phpBB&lt;/strong&gt;.*
TO &lt;strong&gt;phpBB&lt;/strong&gt; IDENTIFIED BY &#39;&lt;strong&gt;phpbb&lt;/strong&gt;&#39;;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first line, &amp;ldquo;GRANT select, insert, update, delete, index, alter, create, drop&amp;rdquo;, states what privileges the user will be granted. The next line, &amp;ldquo;ON &lt;strong&gt;phpBB&lt;/strong&gt;.*&amp;rdquo;, states what the privileges are applied to. Finally, &amp;ldquo;TO &lt;strong&gt;phpBB&lt;/strong&gt; IDENTIFIED BY &#39;&lt;strong&gt;phpbb&lt;/strong&gt;&#39;;&amp;rdquo; states what user will get these privileges. Since the user doesn&#39;t exist yet, we&#39;re also giving a password to the user.&lt;/p&gt;
&lt;p&gt;If the query is OK, enter the following command.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;sql&#34;&gt;UPDATE mysql.user SET Password = OLD_PASSWORD(&#39;phpbb&#39;) WHERE User = &#39;phpBB&#39;;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If this query is OK, and it works, type &lt;strong&gt;exit&lt;/strong&gt;, and press Enter. Now attempt to login to the phpBB user. Once you&#39;ve logged in, enter the following command.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;show databases;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You should be given an ASCII table that shows there&#39;s a database of phpbb. Yippee.&lt;/p&gt;
&lt;p&gt;Now, let&#39;s install phpBB.&lt;/p&gt;
&lt;h3&gt;Installing phpBB&lt;/h3&gt;
&lt;p&gt;First, unzip the downloaded zip file. I&#39;ll be using one called phpBB2.&lt;!--adsense--&gt;&lt;/p&gt;
&lt;p&gt;Since we&#39;re installing locally, we don&#39;t have to worry about permissions. So, once phpBB has been decompressed, navigate to the phpBB root folder in your browser. You&#39;ll be automatically be redirected to &lt;a href=&#34;http://localhost/projects/phpbb2/install/install.php&#34;&gt;http://localhost/projects/phpbb2/install/install.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There&#39;s a form to fill-out, so let&#39;s get to it.&lt;/p&gt;
&lt;p&gt;Database Type: MySQL 4.x/5.x&lt;br /&gt;Choose your installation method: Install&lt;br /&gt;Database Server Hostname/DSN: localhost&lt;br /&gt;Your Database Name: phpBB&lt;br /&gt;Database Username: phpBB&lt;br /&gt;Database Password: phpbb&lt;br /&gt;Prefix for tables in database: phpbb_&lt;br /&gt;Admin Email Address: strivinglife@gmail.com&lt;br /&gt;Domain Name: localhost&lt;br /&gt;Server Port: 80&lt;br /&gt;Script path: /projects/phpbb2/&lt;br /&gt;Administrator Username: admin&lt;br /&gt;Administrator Password: cbe15b&lt;/p&gt;
&lt;p&gt;That&#39;s it. Woot. You&#39;ll have to delete or rename the install and contrib folders (I put an underscore before both). At this point, you can start bouncing around the forum. Woot?&lt;/p&gt;
&lt;h3&gt;How&#39;s the code look?&lt;/h3&gt;
&lt;p&gt;Like most other forums, phpBB uses tables, and doesn&#39;t care to declare a summary. There&#39;s also an issue with an &#39;invalid&#39; target for the footer link.&lt;!--adsense--&gt;&lt;/p&gt;
&lt;p&gt;Internally, code is commented pretty darn well. However, the main comment header is the same copyright notice over and over. Yuck.&lt;/p&gt;
&lt;h3&gt;Default layout and administrative interface&lt;/h3&gt;
&lt;p&gt;Once installed, phpBB setups up one category, one forum, and one post.&lt;/p&gt;
&lt;p&gt;Unfortunately, the look is very boxy, and reminds me of the look of a number of other forums. There&#39;s really not that much, graphically, that separates it from the others. Very similar look to MyBB and PunBB. Where&#39;s the admin interface? Oh, there&#39;s a link way down at the bottom of the page. Eh.&lt;/p&gt;
&lt;h3&gt;Upgrading&lt;/h3&gt;
&lt;p&gt;Checking for updates, amongst other things, is quite easy from the interface, and the install even had an option regarding upgrading. Hmm.&lt;/p&gt;
&lt;p&gt;They do have archived files with the changed and patched files only available for download, which is quite nice.&lt;/p&gt;
&lt;h3&gt;The temporary conclusion&lt;/h3&gt;
&lt;p&gt;phpBB is pretty much like the others that we&#39;ve reviewed. But, now that we&#39;ve gone over all of them, as far as installation and first impressions, it&#39;s time to dig into them deeper.&lt;/p&gt;
&lt;p&gt;Stay tuned for the next &lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown.aspx&#34;&gt;PHP Forum&lt;/a&gt; review article, where we start busting heads.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://words.strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Forum Software Showdown Part 5: PunBB</title>
      <link>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-5-PunBB/</link>
      <pubDate>Fri, 24 Nov 2006 09:00:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-5-PunBB/</guid>
      <description>&lt;p&gt;
Almost there. This time, we&amp;#39;ll be looking at &lt;a href=&#34;http://www.punbb.org/&#34;&gt;PunBB&lt;/a&gt;. First, I did donate to PunBB development some time ago. At the time, I liked PunBB, and received some great support. It&amp;#39;s been sometime since that time, so I don&amp;#39;t know how things stand.
&lt;/p&gt;
&lt;p&gt;
Anywho, &amp;ldquo;PunBB is a fast and lightweight PHP-powered discussion board. It is released under the GNU General Public License. Its primary goals are to be faster, smaller and less graphically intensive as compared to other discussion boards. PunBB has fewer features than many other discussion boards, but is generally faster and outputs smaller, semantically correct XHTML-compliant pages.&amp;rdquo;
&lt;/p&gt;
&lt;p&gt;
In this article, we&amp;#39;ll be installing PunBB version 1.2.14, which is the latest version, as of October 15, 2006.
&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;File and folder size&lt;/h4&gt;
&lt;p&gt;
The zip file for MyBB weighs in at around 250 KB. Unzipped, we&amp;#39;re looking at a bit over 800 KB. The zip file does not contain a single folder, but rather three, so you&amp;#39;ll want to unzip to a single PunBB folder. PunBB is also available in gzip and bz2 formats.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;h4&gt;Requirements&lt;/h4&gt;
&lt;p&gt;
Best requirements thus far. PHP 4.1.0+ and MySQL 3.23.17+, or PHP 4.3.0+ and PostgreSQL 7.0+, or SQLite. Not to shabby, as this is the first we&amp;#39;ve reviewed that supports something other than just MySQL for the database.
&lt;/p&gt;
&lt;h4&gt;Installing on our local Web server&lt;/h4&gt;
&lt;p&gt;
Unlike past articles, for these forum reviews we&amp;#39;re going to create the necessary users and databases using the command line interface of MySQL. If you&amp;#39;re going to be installing these forums to a remote system, just create the user(s) and database(s) as usual (and that goes for if you&amp;#39;re installing it locally as well).
&lt;/p&gt;
&lt;h4&gt;Creating the user and database via the command-line&lt;/h4&gt;
&lt;p&gt;
First, you&amp;#39;ll need to login to MySQL. Open up the Run prompt by going to Start &amp;gt; Run &amp;hellip; and type &lt;strong&gt;cmd&lt;/strong&gt;, then press Enter. At the prompt, if you&amp;#39;ve setup MySQL correctly, you can type the following command, followed by pressing Enter.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     mysql -h localhost -u root -p
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be prompted to enter your password, which you&amp;#39;ll have already setup. Enter your password and press Enter.
&lt;/p&gt;
&lt;p&gt;
At this point, you&amp;#39;re logged into MySQL. Now, we can create our database, create our user, and grant the user privilege to modify the database we created.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re installing PunBB, we&amp;#39;ll create a database called PunBB.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     create database PunBB;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be told that &amp;ldquo;Query OK, 1 row affected&amp;rdquo;, followed by the execution time.
&lt;/p&gt;
&lt;p&gt;
Now, we&amp;#39;ll create a user with privileges to access the database. Note that other than the bold text, this command is case-insensitive. Also, you may want to change &amp;#39;&lt;strong&gt;punbb&lt;/strong&gt;&amp;#39; to something different (as this is the user&amp;#39;s password).
&lt;/p&gt;
&lt;p&gt;
Before you enter this, look it over, and then read the paragraph following, for an explanation.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     GRANT select, insert, update, delete, index, alter, create, drop&lt;br /&gt;
    ON &lt;strong&gt;PunBB&lt;/strong&gt;.&lt;em&gt;&lt;br /&gt;
    TO &lt;strong&gt;PunBB&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;punbb&lt;/strong&gt;&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first line, &amp;ldquo;GRANT select, insert, update, delete, index, alter, create, drop&amp;rdquo;, states what privileges the user will be granted. The next line, &amp;ldquo;ON &lt;strong&gt;PunBB&lt;/strong&gt;.&lt;/em&gt;&amp;rdquo;, states what the privileges are applied to. Finally, &amp;ldquo;TO &lt;strong&gt;PunBB&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;punbb&lt;/strong&gt;&amp;#39;;&amp;rdquo; states what user will get these privileges. Since the user doesn&amp;#39;t exist yet, we&amp;#39;re also giving a password to the user.
&lt;/p&gt;
&lt;p&gt;
If the query is OK, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     UPDATE mysql.user SET Password = OLD&lt;em&gt;PASSWORD(&amp;#39;punbb&amp;#39;) WHERE User = &amp;#39;PunBB&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If this query is OK, and it works, type &lt;strong&gt;exit&lt;/strong&gt;, and press Enter. Now attempt to login to the PunBB user. Once you&amp;#39;ve logged in, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     show databases;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You should be given an ASCII table that shows there&amp;#39;s a database of punbb. Yippee.
&lt;/p&gt;
&lt;p&gt;
Now, let&amp;#39;s install PunBB.
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;Installing PunBB&lt;/h4&gt;
&lt;p&gt;
First, unzip the downloaded zip file. The files are within three folders in the zip file, so make sure you create a folder to dump these into. I&amp;#39;ll be using one called punbb.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re installing locally, we don&amp;#39;t have to worry about permissions. So, once PunBB has been decompressed, navigate to the PunBB root folder in your browser. You&amp;#39;ll be told that config.php doesn&amp;#39;t exist, and be given a link to the install file. &lt;a href=&#34;http://localhost/projects/punbb/install.php&#34;&gt;http://localhost/projects/punbb/install.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a form to fill-out, so let&amp;#39;s get to it.
&lt;/p&gt;
&lt;p&gt;
You can select your database type, which we&amp;#39;ll leave at MySQL Standard. Database server hostname can be left at localhost.
&lt;/p&gt;
&lt;p&gt;
Database name: PunBB&lt;br /&gt;
Database username: PunBB&lt;br /&gt;
Database password: punbb&lt;br /&gt;
Table prefix: punbb&lt;/em&gt;&lt;br /&gt;
Administrator username: admin&lt;br /&gt;
Password: cbe15b&lt;br /&gt;
Administrator&amp;#39;s e-mail: strivinglife@gmail.com&lt;br /&gt;
Base URL: &lt;a href=&#34;http://localhost/projects/punbb&#34;&gt;http://localhost/projects/punbb&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
At this point, start the installation. Once that&amp;#39;s done, you&amp;#39;ll need to copy some text into a new config.php file, and then you can hit the main forum page at &lt;a href=&#34;http://localhost/projects/punbb/&#34;&gt;http://localhost/projects/punbb/&lt;/a&gt; (for example).
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;How&amp;#39;s the code look?&lt;/h4&gt;
&lt;p&gt;
Like most other forums, PunBB uses a table, and doesn&amp;#39;t care to declare a summary. However, that looks like the only issue.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
Internally, code is commented pretty darn well. Not too shabby at all.
&lt;/p&gt;
&lt;h4&gt;Default layout and administrative interface&lt;/h4&gt;
&lt;p&gt;
Once installed, PunBB setups up one category, one forum, and one post.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, the look is very boxy, and reminds me of the look of a number of other forums. There&amp;#39;s really not that much, graphically, that separates it from the others. The look is very similar to MyBB, but much flatter.
&lt;/p&gt;
&lt;h4&gt;Upgrading&lt;/h4&gt;
&lt;p&gt;
Checking for updates, amongst other things, is quite easy from the interface. Unfortunately, when I attempted to check for updates, Apache started choking on me, specifically with problems in the php4ts.dll (as it did with MyBB).
&lt;/p&gt;
&lt;p&gt;
They do have archived files with the changed files only available for download, which is quite nice.
&lt;/p&gt;
&lt;h4&gt;The temporary conclusion&lt;/h4&gt;
&lt;p&gt;
PunBB is pretty much like the others that we&amp;#39;ve reviewed. Until we get into the last forum, and start comparing all six, we&amp;#39;ll leave it at that.
&lt;/p&gt;
&lt;p&gt;
Stay tuned for the next &lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown.aspx&#34;&gt;PHP Forum&lt;/a&gt; review.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://words.strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;
&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Forum Software Showdown Part 4: MyBB</title>
      <link>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-4-MyBB/</link>
      <pubDate>Wed, 22 Nov 2006 21:00:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-4-MyBB/</guid>
      <description>&lt;p&gt;
This time, we&amp;#39;ll be looking at &lt;a href=&#34;http://www.mybboard.com/&#34;&gt;MyBB&lt;/a&gt;. &amp;ldquo;MyBB is a powerful, efficient and free forum package developed in PHP and MySQL. MyBB has been designed with the end users in mind, you and your subscribers. Full control over your discussion system is presented right at the tip of your fingers, from multiple styles and themes to the ultimate customisation of your forums using the template system.&amp;rdquo;
&lt;/p&gt;
&lt;p&gt;
In this article, we&amp;#39;ll be installing MyBB version 1.2.1, which is the latest version, as of September 27, 2006.
&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;File and folder size&lt;/h4&gt;
&lt;p&gt;
The zip file for MyBB weighs in at just over 1 MB. Unzipped, we&amp;#39;re looking at almost 3 MB. The zip file does not contain a single folder, but rather two, so you&amp;#39;ll want to unzip to a single MyBB folder. MyBB is also available in gzip and bzip formats.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;h4&gt;Requirements&lt;/h4&gt;
&lt;p&gt;
MyBB requirements were dang hard to find. That said, MyBB requires PHP 4.3.11+ and MySQL 4.0+. The PHP requirement actually seems a little high.
&lt;/p&gt;
&lt;h4&gt;Installing on our local Web server&lt;/h4&gt;
&lt;p&gt;
Unlike past articles, for these forum reviews we&amp;#39;re going to create the necessary users and databases using the command line interface of MySQL. If you&amp;#39;re going to be installing these forums to a remote system, just create the user(s) and database(s) as usual (and that goes for if you&amp;#39;re installing it locally as well).
&lt;/p&gt;
&lt;h4&gt;Creating the user and database via the command-line&lt;/h4&gt;
&lt;p&gt;
First, you&amp;#39;ll need to login to MySQL. Open up the Run prompt by going to Start &amp;gt; Run &amp;hellip; and type &lt;strong&gt;cmd&lt;/strong&gt;, then press Enter. At the prompt, if you&amp;#39;ve setup MySQL correctly, you can type the following command, followed by pressing Enter.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     mysql -h localhost -u root -p
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be prompted to enter your password, which you&amp;#39;ll have already setup. Enter your password and press Enter.
&lt;/p&gt;
&lt;p&gt;
At this point, you&amp;#39;re logged into MySQL. Now, we can create our database, create our user, and grant the user privilege to modify the database we created.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re installing MyBB, we&amp;#39;ll create a database called MyBB.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     create database MyBB;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be told that &amp;ldquo;Query OK, 1 row affected&amp;rdquo;, followed by the execution time.
&lt;/p&gt;
&lt;p&gt;
Now, we&amp;#39;ll create a user with privileges to access the database. Note that other than the bold text, this command is case-insensitive. Also, you may want to change &amp;#39;&lt;strong&gt;mybb&lt;/strong&gt;&amp;#39; to something different (as this is the user&amp;#39;s password).
&lt;/p&gt;
&lt;p&gt;
Before you enter this, look it over, and then read the paragraph following, for an explanation.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     GRANT select, insert, update, delete, index, alter, create, drop&lt;br /&gt;
    ON &lt;strong&gt;MyBB&lt;/strong&gt;.&lt;em&gt;&lt;br /&gt;
    TO &lt;strong&gt;MyBB&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;mybb&lt;/strong&gt;&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first line, &amp;ldquo;GRANT select, insert, update, delete, index, alter, create, drop&amp;rdquo;, states what privileges the user will be granted. The next line, &amp;ldquo;ON &lt;strong&gt;MyBB&lt;/strong&gt;.&lt;/em&gt;&amp;rdquo;, states what the privileges are applied to. Finally, &amp;ldquo;TO &lt;strong&gt;MyBB&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;mybb&lt;/strong&gt;&amp;#39;;&amp;rdquo; states what user will get these privileges. Since the user doesn&amp;#39;t exist yet, we&amp;#39;re also giving a password to the user.
&lt;/p&gt;
&lt;p&gt;
If the query is OK, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     UPDATE mysql.user SET Password = OLD&lt;em&gt;PASSWORD(&amp;#39;mybb&amp;#39;) WHERE User = &amp;#39;MyBB&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If this query is OK, and it works, type &lt;strong&gt;exit&lt;/strong&gt;, and press Enter. Now attempt to login to the MyBB user. Once you&amp;#39;ve logged in, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     show databases;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You should be given an ASCII table that shows there&amp;#39;s a database of mybb. Yippee.
&lt;/p&gt;
&lt;p&gt;
Now, let&amp;#39;s install MyBB.
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;Installing MyBB&lt;/h4&gt;
&lt;p&gt;
First, unzip the downloaded zip file. The files are within two folders in the zip file, so make sure you create a folder to dump these into. I&amp;#39;ll be using one called mybb.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re installing locally, we don&amp;#39;t have to worry about permissions. So, once MyBB has been decompressed, navigate to the MyBB root folder in your browser and then the upload/install folder. On my install, this is at &lt;a href=&#34;http://localhost/projects/mybb/upload/install/&#34;&gt;http://localhost/projects/mybb/install/&lt;/a&gt;. I simply moved the upload folder&amp;#39;s contents into the mybb folder.
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;re in for it now. There&amp;#39;s ten pages, from the initial look, that you&amp;#39;ll have to go through. Here goes.
&lt;/p&gt;
&lt;p&gt;
Read and Next along. There&amp;#39;s a Requirements Check page which will tell you if you&amp;#39;re set for requirements. If you&amp;#39;ve followed along with my other tutorials, you will be set.
&lt;/p&gt;
&lt;p&gt;
In Database Configuration, leave Host as is.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    Database Host: localhost&lt;br /&gt;
    Database Username: MyBB&lt;br /&gt;
    Database Password: mybb&lt;br /&gt;
    Database Name: MyBB&lt;br /&gt;
    Table Prefix: mybb&lt;/em&gt;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once this has been entered, and you&amp;#39;ve pressed Next, the necessary tables (all fifty of them) will be created. Okay, so I was kidding about the fifty, but there&amp;#39;s a whole lot. Yeesh. Next will populate these tables with some data, then setup the default theme.
&lt;/p&gt;
&lt;p&gt;
Board Configuration is next, which will have some default settings. These will be fine, except the cookie path will have to be updated (why they couldn&amp;#39;t do this, since they populated the others, we&amp;#39;ll never know), followed by an email setting. Based on the URL of &lt;a href=&#34;http://localhost/projects/mybb/&#34;&gt;http://localhost/projects/mybb/&lt;/a&gt;, my settings were as follows. Note that the domain is blank.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    Cookie Domain:&lt;br /&gt;
    Cookie Path: /projects/mybb/
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Next you&amp;#39;ll create an Administrator Account. I used the same settings as I&amp;#39;ve used for the previous forums.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    Username: admin&lt;br /&gt;
    Password: cbe15b
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, MyBB will be setup. Yay. The installer will also be locked by the creation of a &amp;#39;lock&amp;#39; file. That is nice.
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;How&amp;#39;s the code look?&lt;/h4&gt;
&lt;p&gt;
Like most other forums, MyBB uses tables, and doesn&amp;#39;t care to declare a summary. However, that looks like the only issue. Some of the admin pages are especially table-heavy.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
Internally, some code is commented, while some is not. That&amp;#39;s unfortunate, but from the MyBB site, it sounds like this will change.
&lt;/p&gt;
&lt;h4&gt;Default layout and administrative interface&lt;/h4&gt;
&lt;p&gt;
Once installed, MyBB setups up one category and no topics.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, the look is very boxy, and reminds me of the look of a number of other forums. There&amp;#39;s really not that much, graphically, that separates it from the others.
&lt;/p&gt;
&lt;h4&gt;Upgrading&lt;/h4&gt;
&lt;p&gt;
Checking for updates, amongst other things, is quite easy from the interface. Unfortunately, when I attempted to check for updates, Apache started choking on me, specifically with problems in the php4ts.dll.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s one download file, but it looks like they do state what files have been changed.
&lt;/p&gt;
&lt;h4&gt;The temporary conclusion&lt;/h4&gt;
&lt;p&gt;
MyBB has a nice administrative interface, but the default layout doesn&amp;#39;t really get me excited. That&amp;#39;s all I&amp;#39;ll say, until we&amp;#39;ve got the last two forums installed.
&lt;/p&gt;
&lt;p&gt;
Stay tuned for the next &lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown.aspx&#34;&gt;PHP Forum&lt;/a&gt; review.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://words.strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;
&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Forum Software Showdown Part 3: Simple Machines</title>
      <link>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-3-Simple-Machines/</link>
      <pubDate>Tue, 21 Nov 2006 18:00:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-3-Simple-Machines/</guid>
      <description>&lt;p&gt;
Curiously, in late-September 2006, &lt;a href=&#34;http://simplemachines.org/&#34;&gt;Simple Machines Forum&lt;/a&gt; turned three (it had been three years since 1.0 beta 1). That&amp;#39;s curious because the current stable version of Simple Machines is 1.0.9, and there&amp;#39;s a 1.1 RC3 out as well (as of late-October 2006).
&lt;/p&gt;
&lt;p&gt;
In this article, we&amp;#39;ll be installing Simple Machines version 1.0.9, so we can compare it to the other PHP forums that we&amp;#39;ve installed, or will be installing.
&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;File and folder size&lt;/h4&gt;
&lt;p&gt;
The zip file for Vanilla 1.0.1 weighs in at just over 1.1 MB. Wow. Of the six forums we review, this is the largest. However, this is for the full install. There&amp;#39;s also update and upgrade versions, as well as two other compressed formats (tar.gz and tar.bz2). Unzipped, we&amp;#39;re looking at just over 3 MB of file.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;h4&gt;Requirements&lt;/h4&gt;
&lt;p&gt;
Simple Machines requires PHP 4.1.0+ and MySQL 3.23.28+. Compared to the other forums we&amp;#39;ll be going over, these requirements are pretty low (especially the MySQL requirement). There are a number of PHP settings that must be turned on or off, for Simple Machines to function. Bossy, aren&amp;#39;t they? If you&amp;#39;ve followed along, our server will have all of these options set as they require.
&lt;/p&gt;
&lt;h4&gt;Installing on our local Web server&lt;/h4&gt;
&lt;p&gt;
Unlike past articles, for these forum reviews we&amp;#39;re going to create the necessary users and databases using the command line interface of MySQL. If you&amp;#39;re going to be installing these forums to a remote system, just create the user(s) and database(s) as usual (and that goes for if you&amp;#39;re installing it locally as well).
&lt;/p&gt;
&lt;h4&gt;Creating the user and database via the command-line&lt;/h4&gt;
&lt;p&gt;
First, you&amp;#39;ll need to login to MySQL. Open up the Run prompt by going to Start &amp;gt; Run &amp;hellip; and type &lt;strong&gt;cmd&lt;/strong&gt;, then press Enter. At the prompt, if you&amp;#39;ve setup MySQL correctly, you can type the following command, followed by pressing Enter.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     mysql -h localhost -u root -p
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be prompted to enter your password, which you&amp;#39;ll have already setup. Enter your password and press Enter.
&lt;/p&gt;
&lt;p&gt;
At this point, you&amp;#39;re logged into MySQL. Now, we can create our database, create our user, and grant the user privilege to modify the database we created.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re installing Simple Machines, we&amp;#39;ll create a database called SimpleMachines.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     create database SimpleMachines;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be told that &amp;ldquo;Query OK, 1 row affected&amp;rdquo;, followed by the execution time.
&lt;/p&gt;
&lt;p&gt;
Now, we&amp;#39;ll create a user with privileges to access the database. Note that other than the bold text, this command is case-insensitive. Also, you may want to change &amp;#39;&lt;strong&gt;simplemachines&lt;/strong&gt;&amp;#39; to something different (as this is the user&amp;#39;s password).
&lt;/p&gt;
&lt;p&gt;
Before you enter this, look it over, and then read the paragraph following, for an explanation.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     GRANT select, insert, update, delete, index, alter, create, drop&lt;br /&gt;
    ON &lt;strong&gt;SimpleMachines&lt;/strong&gt;.&lt;em&gt;&lt;br /&gt;
    TO &lt;strong&gt;SimpleMachines&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;simplemachines&lt;/strong&gt;&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first line, &amp;ldquo;GRANT select, insert, update, delete, index, alter, create, drop&amp;rdquo;, states what privileges the user will be granted. The next line, &amp;ldquo;ON &lt;strong&gt;SimpleMachines&lt;/strong&gt;.&lt;/em&gt;&amp;rdquo;, states what the privileges are applied to. Finally, &amp;ldquo;TO &lt;strong&gt;SimpleMachines&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;simplemachines&lt;/strong&gt;&amp;#39;;&amp;rdquo; states what user will get these privileges. Since the user doesn&amp;#39;t exist yet, we&amp;#39;re also giving a password to the user.
&lt;/p&gt;
&lt;p&gt;
If the query is OK, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     UPDATE mysql.user SET Password = OLD&lt;em&gt;PASSWORD(&amp;#39;simplemachines&amp;#39;) WHERE User = &amp;#39;SimpleMachines&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If this query is OK, and it works, type &lt;strong&gt;exit&lt;/strong&gt;, and press Enter. Now attempt to login to the SimpleMachines user. Once you&amp;#39;ve logged in, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     show databases;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You should be given an ASCII table that shows there&amp;#39;s a database of simplemachines. Yippee.
&lt;/p&gt;
&lt;p&gt;
Now, let&amp;#39;s install Simple Machines.
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;Installing Simple Machines&lt;/h4&gt;
&lt;p&gt;
First, unzip the downloaded zip file. The files are not within a directory in the zip file, so make sure you create a folder to dump these into. I&amp;#39;ll be using one called SimpleMachines.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re installing locally, we don&amp;#39;t have to worry about permissions. So, once Simple Machines has been decompressed, navigate to the Simple Machines root folder in your browser. Since you haven&amp;#39;t setup Simple Machines yet, it will redirect you to the installer, which is located at, in my install, &lt;a href=&#34;http://localhost/projects/simplemachines/install.php&#34;&gt;http://localhost/projects/simplemachines/install.php&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll be prompted for Basic and MySQL Server settings. I left the Basic Settings as they were. MySQL Server Settings have been started, we just need to confirm and finish them.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    MySQL server name: localhost&lt;br /&gt;
    MySQL username: SimpleMachines&lt;br /&gt;
    MySQL password: simplemachines&lt;br /&gt;
    MySQL database name: SimpleMachines&lt;br /&gt;
    MySQL table prefix: smf&lt;/em&gt;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once you proceed, you should now be able to create your account. As before, I used the same username and password as I used in the previous forum installs.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    Your username: admin&lt;br /&gt;
    Password: cbe15b&lt;br /&gt;
    Password: cbe15b&lt;br /&gt;
    Email Address: strivinglife@gmail.com
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You&amp;#39;ll also need to enter in the MySQL database password, which is the same as you used before (simplemachines in my case). With that, finish up. You should be told that the installation process is complete, and you can now delete the install file (possibly using the installer). You&amp;#39;ll be automatically logged in. If install.php still exists, you&amp;#39;ll be told so.
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;How&amp;#39;s the code look?&lt;/h4&gt;
&lt;p&gt;
Unfortunately, Simple Machines is very table heavy. Combined with the fact that they don&amp;#39;t have summaries, the code isn&amp;#39;t the cleanest. In addition, links use ids that start with numbers, which is not that good of a thing.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
Inside, the code looks pretty darn good.
&lt;/p&gt;
&lt;h4&gt;Default layout and administrative interface&lt;/h4&gt;
&lt;p&gt;
Once installed, Simple Machines setups up one category and one topic (with one post). That&amp;#39;s nice.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, the look is very, very, boxy. Some people like this, but I like things that flow a little more. There is another theme installed by default, which looks much better.
&lt;/p&gt;
&lt;h4&gt;Upgrading&lt;/h4&gt;
&lt;p&gt;
Checking for updates is quite easy from the interface. From the looks of it, upgrading is just as easy, since there&amp;#39;s a separate file. Wow.
&lt;/p&gt;
&lt;h4&gt;The temporary conclusion&lt;/h4&gt;
&lt;p&gt;
I&amp;#39;ve used Simple Machines before on Fractovia. I don&amp;#39;t really care for it, since it feels and looks clunky. On the bright side, no configuration files to manually update. Thus far, three reviews down, I&amp;#39;m siding heavily with Vanilla.
&lt;/p&gt;
&lt;p&gt;
But, before we dig any further, we&amp;#39;ll need to install some more forums.
&lt;/p&gt;
&lt;p&gt;
Stay tuned for the next &lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown.aspx&#34;&gt;PHP Forum&lt;/a&gt; review.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://words.strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;
&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Forum Software Showdown Part 2: Vanilla</title>
      <link>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-2-Vanilla/</link>
      <pubDate>Mon, 20 Nov 2006 09:00:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-2-Vanilla/</guid>
      <description>&lt;p&gt;
While the &lt;a href=&#34;http://getvanilla.com/&#34;&gt;Vanilla&lt;/a&gt; forum&amp;#39;s are fairly unknown, it&amp;#39;s been around for a little over a year. &amp;ldquo;Vanilla is an open-source, standards-compliant, multi-lingual, fully extensible discussion forum for the web.&amp;rdquo; The version we&amp;#39;ll be installing, 1.0.1, was released in late-August 2006.
&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;File and folder size&lt;/h4&gt;
&lt;p&gt;
The zip file for Vanilla 1.0.1 (which is the only download type) weighs in at just under 400 KB. Unzipped, it&amp;#39;s almost 1.2 MB in size. Overall, that&amp;#39;s pretty small.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;h4&gt;Requirements&lt;/h4&gt;
&lt;p&gt;
Vanilla requires PHP 4.1+ and MySQL 3.23+. Compared to the other forums we&amp;#39;ll be going over, these requirements are pretty low (especially the MySQL requirement).
&lt;/p&gt;
&lt;h4&gt;Installing on our local Web server&lt;/h4&gt;
&lt;p&gt;
Unlike past articles, for these forum reviews we&amp;#39;re going to create the necessary users and databases using the command line interface of MySQL. If you&amp;#39;re going to be installing these forums to a remote system, just create the user(s) and database(s) as usual (and that goes for if you&amp;#39;re installing it locally as well).
&lt;/p&gt;
&lt;h4&gt;Creating the user and database via the command-line&lt;/h4&gt;
&lt;p&gt;
First, you&amp;#39;ll need to login to MySQL. Open up the Run prompt by going to Start &amp;gt; Run &amp;hellip; and type &lt;strong&gt;cmd&lt;/strong&gt;, then press Enter. At the prompt, if you&amp;#39;ve setup MySQL correctly, you can type the following command, followed by pressing Enter.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    mysql -h localhost -u root -p
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be prompted to enter your password, which you&amp;#39;ll have already setup. Enter your password and press Enter.
&lt;/p&gt;
&lt;p&gt;
At this point, you&amp;#39;re logged into MySQL. Now, we can create our database, create our user, and grant the user privilege to modify the database we created.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re installing Vanilla, we&amp;#39;ll create a database called Vanilla.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     create database Vanilla;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be told that &amp;ldquo;Query OK, 1 row affected&amp;rdquo;, followed by the execution time.
&lt;/p&gt;
&lt;p&gt;
Now, we&amp;#39;ll create a user with privileges to access the database. Note that other than the bold text, this command is case-insensitive. Also, you may want to change &amp;#39;&lt;strong&gt;vanilla&lt;/strong&gt;&amp;#39; to something different (as this is the user&amp;#39;s password).
&lt;/p&gt;
&lt;p&gt;
Before you enter this, look it over, and then read the paragraph following, for an explanation.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     GRANT select, insert, update, delete, index, alter, create, drop&lt;br /&gt;
    ON &lt;strong&gt;Vanilla&lt;/strong&gt;.&lt;em&gt;&lt;br /&gt;
    TO &lt;strong&gt;Vanilla&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;vanilla&lt;/strong&gt;&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first line, &amp;ldquo;GRANT select, insert, update, delete, index, alter, create, drop&amp;rdquo;, states what privileges the user will be granted. The next line, &amp;ldquo;ON &lt;strong&gt;Vanilla&lt;/strong&gt;.&lt;/em&gt;&amp;rdquo;, states what the privileges are applied to. Finally, &amp;ldquo;TO &lt;strong&gt;Vanilla&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;vanilla&lt;/strong&gt;&amp;#39;;&amp;rdquo; states what user will get these privileges. Since the user doesn&amp;#39;t exist yet, we&amp;#39;re also giving a password to the user.
&lt;/p&gt;
&lt;p&gt;
If the query is OK, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     UPDATE mysql.user SET Password = OLD_PASSWORD(&amp;#39;vanilla&amp;#39;) WHERE User = &amp;#39;Vanilla&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If this query is OK, and it works, type &lt;strong&gt;exit&lt;/strong&gt;, and press Enter. Now attempt to login to the Vanilla user. Once you&amp;#39;ve logged in, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     show databases;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You should be given an ASCII table that shows there&amp;#39;s a database of vanilla. Yippee.
&lt;/p&gt;
&lt;p&gt;
Now, let&amp;#39;s install Vanilla.
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;Installing Vanilla&lt;/h4&gt;
&lt;p&gt;
First, unzip the downloaded zip file. The files are all included in a Vanilla.1.0.1 folder. For this guide, we&amp;#39;ll be keeping it in that folder, since we&amp;#39;ll be installing a number of forums, but changing the name to remove the version information.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
Once Vanilla has been decompressed, navigate to the Vanilla root folder in your browser. Since you haven&amp;#39;t setup Vanilla yet, it will redirect you to the installer, which is located at, in my install, &lt;a href=&#34;http://localhost/projects/vanilla/setup/index.html&#34;&gt;http://localhost/projects/vanilla/setup/index.html&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Here, there&amp;#39;s a couple of options. You can either install fresh (which is what we&amp;#39;ll be doing) or find out how to upgrade from a previous version. For now, let&amp;#39;s click on the link to &amp;ldquo;install a completely brand new version of Vanilla&amp;rdquo;. These steps will walk you through the setup almost completely.
&lt;/p&gt;
&lt;p&gt;
First, you&amp;#39;ll need to assure that permissions have been setup correctly on files and folders. We&amp;#39;re okay in this respect, so check the permissions and continue.
&lt;/p&gt;
&lt;p&gt;
Next, you&amp;#39;ll need to enter in information regarding MySQL. If you&amp;#39;ve been following along, these are as follows.
&lt;/p&gt;
&lt;p&gt;
MySQL Server: localhost&lt;br /&gt;
MySQL Database Name: Vanilla&lt;br /&gt;
MySQL User: Vanilla&lt;br /&gt;
MySQL Password: vanilla
&lt;/p&gt;
&lt;p&gt;
Click on the link to continue.
&lt;/p&gt;
&lt;p&gt;
Finally, you&amp;#39;ll need to create an administrative account, setup a contact email, and confirm cookie options. What follows are my options, but customize as needed. Note that for password, I simply used the password I was given for bbPress.
&lt;/p&gt;
&lt;p&gt;
Username: admin&lt;br /&gt;
Password: cbe15b&lt;br /&gt;
Support Contact Name: James Skemp&lt;br /&gt;
Support Email Address: strivinglife@gmail.com&lt;br /&gt;
Forum Name: Vanilla&lt;br /&gt;
Cookie Domain: localhost&lt;br /&gt;
Cookie Path: /projects/vanilla/
&lt;/p&gt;
&lt;p&gt;
One final click, and you&amp;#39;re ready to go. You can either login, as they direct, or just take a look at the main page. &lt;a href=&#34;http://localhost/projects/vanilla/&#34;&gt;http://localhost/projects/vanilla/&lt;/a&gt;
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;How&amp;#39;s the code look?&lt;/h4&gt;
&lt;p&gt;
All-in-all, the code validates beautifully, and is a pleasure to read. The random code files I pulled up were extremely well documented. I&amp;#39;ve rarely seen code such as this.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;h4&gt;Default layout and administrative interface&lt;/h4&gt;
&lt;p&gt;
Like the code, the default layout is beautiful. Simple, simple, simple. The administrative interface uses the same wrapper as the main site, so ditto for it. And, what&amp;#39;s this, no tables?
&lt;/p&gt;
&lt;p&gt;
Unfortunately, entering into some options, you lose your left-side navigation, and there&amp;#39;s no way to go back via a link. Fortunately, this isn&amp;#39;t the case for all of the options.
&lt;/p&gt;
&lt;p&gt;
No forums or topics are already setup, for better or worse. On the one hand, it makes clean-up easy, but it also means you have to do this yourself just to get a look.
&lt;/p&gt;
&lt;h4&gt;Upgrading&lt;/h4&gt;
&lt;p&gt;
Checking for updates is quite easy from the interface. Unfortunately, upgrading basically involves reinstalling Vanilla. If you&amp;#39;ve made modifications, you&amp;#39;ll need to re-add them. However, they do say that you can see what files have changed, which means you can do a compare to add in the new changes. Not too shabby.
&lt;/p&gt;
&lt;h4&gt;The temporary conclusion&lt;/h4&gt;
&lt;p&gt;
I like Vanilla based on my first impression. Editing configuration files is no fun, especially for people who can&amp;#39;t code. Vanilla makes all of this really easy.
&lt;/p&gt;
&lt;p&gt;
Yet, on the other hand, it&amp;#39;s MySQL connection step doesn&amp;#39;t provide much help to the person who doesn&amp;#39;t know any of this. Default to localhost, since that will usually be what the user needs.
&lt;/p&gt;
&lt;p&gt;
Before we dig any further, we&amp;#39;ll need to install some more forums.
&lt;/p&gt;
&lt;p&gt;
Stay tuned for the next &lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown.aspx&#34;&gt;PHP Forum&lt;/a&gt; review.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://words.strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;
&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Forum Software Showdown Part 1: bbPress</title>
      <link>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-1-bbPress/</link>
      <pubDate>Sun, 19 Nov 2006 09:00:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown-Part-1-bbPress/</guid>
      <description>&lt;p&gt;
A relative new-comer, &lt;a href=&#34;http://bbpress.org/&#34;&gt;bbPress&lt;/a&gt; &amp;ldquo;is forum software with a twist from the creators of WordPress&amp;rdquo;. The first public version, 0.72, was released in mid-October 2006, and the version we&amp;#39;ll be installing, 0.73, was released a couple of weeks later. Downloading bbPress is fairly easy, since there&amp;#39;s only two options &amp;ndash; one for the installer in .zip, and one in .tar.gz.
&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;File and folder size&lt;/h4&gt;
&lt;p&gt;
At 170 KB, the zip file is extremely small, and is less than 500 KB unzipped. Of the six pieces of forum software that I&amp;#39;ll be reviewing, bbPress is the smallest, but we&amp;#39;ll see what that translates into as far as functionality.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;h4&gt;Requirements&lt;/h4&gt;
&lt;p&gt;
bbPress requires PHP 4.2+ and MySQL 4.0+, as well as MultiViews or mod_rewrite. All-in-all, pretty standard.
&lt;/p&gt;
&lt;h4&gt;Installing on our local Web server&lt;/h4&gt;
&lt;p&gt;
Unlike past articles, for these forum reviews we&amp;#39;re going to create the necessary users and databases using the command line interface of MySQL. If you&amp;#39;re going to be installing these forums to a remote system, just create the user(s) and database(s) as usual (and that goes for if you&amp;#39;re installing it locally as well).
&lt;/p&gt;
&lt;h4&gt;Creating the user and database via the command-line&lt;/h4&gt;
&lt;p&gt;
First, you&amp;#39;ll need to login to MySQL. Open up the Run prompt by going to Start &amp;gt; Run &amp;hellip; and type &lt;strong&gt;cmd&lt;/strong&gt;, then press Enter. At the prompt, if you&amp;#39;ve setup MySQL correctly, you can type the following command, followed by pressing Enter.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     mysql -h localhost -u root -p
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be prompted to enter your password, which you&amp;#39;ll have already setup. Enter your password and press Enter.
&lt;/p&gt;
&lt;p&gt;
At this point, you&amp;#39;re logged into MySQL. Now, we can create our database, create our user, and grant the user privilege to modify the database we created.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re installing bbPress, we&amp;#39;ll create a database called bbPress.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     create database bbPress;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At this point, you&amp;#39;ll be told that &amp;ldquo;Query OK, 1 row affected&amp;rdquo;, followed by the execution time.
&lt;/p&gt;
&lt;p&gt;
Now, we&amp;#39;ll create a user with privileges to access the database. Note that other than the bold text, this command is case-insensitive. Also, you may want to change &amp;#39;&lt;strong&gt;bbpress&lt;/strong&gt;&amp;#39; to something different (as this is the user&amp;#39;s password).
&lt;/p&gt;
&lt;p&gt;
Before you enter this, look it over, and then read the paragraph following, for an explanation.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     GRANT select, insert, update, delete, index, alter, create, drop&lt;br /&gt;
    ON &lt;strong&gt;bbPress&lt;/strong&gt;.&lt;em&gt;&lt;br /&gt;
    TO &lt;strong&gt;bbPress&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;bbpress&lt;/strong&gt;&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first line, &amp;ldquo;GRANT select, insert, update, delete, index, alter, create, drop&amp;rdquo;, states what privileges the user will be granted. The next line, &amp;ldquo;ON &lt;strong&gt;bbPress&lt;/strong&gt;.&lt;/em&gt;&amp;rdquo;, states what the privileges are applied to. Finally, &amp;ldquo;TO &lt;strong&gt;bbPress&lt;/strong&gt; IDENTIFIED BY &amp;#39;&lt;strong&gt;bbpress&lt;/strong&gt;&amp;#39;;&amp;rdquo; states what user will get these privileges. Since the user doesn&amp;#39;t exist yet, we&amp;#39;re also giving a password to the user.
&lt;/p&gt;
&lt;p&gt;
If the query is ok, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     UPDATE mysql.user SET Password = OLD_PASSWORD(&amp;rsquo;bbpress&amp;rsquo;) WHERE User = &amp;lsquo;bbPress&amp;rsquo;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If this query is OK, and it works, type &lt;strong&gt;exit&lt;/strong&gt;, and press Enter. Now attempt to login to the bbPress user. Once you&amp;#39;ve logged in, enter the following command.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     show databases;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You should be given an ASCII table that shows there&amp;#39;s a database of bbpress. Yippee.
&lt;/p&gt;
&lt;p&gt;
Now, let&amp;#39;s install bbPress.
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;Installing bbPress&lt;/h4&gt;
&lt;p&gt;
First, unzip the downloaded zip file. The files are all included in a bbpress folder. For this guide, we&amp;#39;ll be keeping it in that folder, since we&amp;#39;ll be installing a number of forums. However, if you decide to go with bbPress, you may not want to keep the files in the bbPress folder.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
Once bbPress has been decompressed, go into the bbpress folder and make a copy of the config-sample.php file. Rename the copy to simply config.php. Next, open the file. There&amp;#39;s a lot of things to change, so get ready.
&lt;/p&gt;
&lt;p&gt;
First, change lines 4 to 7 (begin with &amp;#39;define&amp;#39;). Per the above, it&amp;#39;ll be something like the following.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     define(&amp;#39;BBDB_NAME&amp;#39;, &amp;#39;bbPress&amp;#39;); // The name of the database&lt;br /&gt;
    define(&amp;#39;BBDB_USER&amp;#39;, &amp;#39;bbPress&amp;#39;); // Your MySQL username&lt;br /&gt;
    define(&amp;#39;BBDB_PASSWORD&amp;#39;, &amp;#39;bbpress&amp;#39;); // &amp;hellip;and password&lt;br /&gt;
    define(&amp;#39;BBDB_HOST&amp;#39;, &amp;#39;localhost&amp;#39;); // 99% chance you won&amp;#39;t need to change this value
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Line 15 will need to be changed as well. For my installation, it was as follows.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     $bb-&amp;gt;domain = &amp;#39;&lt;a href=&#34;http://localhost&amp;amp;#39;&#34;&gt;http://localhost&amp;amp;#39;&lt;/a&gt;; // Example: &amp;#39;&lt;a href=&#34;http://bbpress.example.com&amp;amp;#39&#34;&gt;http://bbpress.example.com&amp;amp;#39&lt;/a&gt;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Line 17 was changed as well. This may vary for your installation.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     $bb-&amp;gt;path = &amp;#39;/projects/bbpress/&amp;#39;;                // Example: &amp;#39;/forums/&amp;#39;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I&amp;#39;m going to leave the name (line 20) as is, but change line 23, the email. Make sure you change your&amp;#39;s accordingly.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     $bb-&amp;gt;admin_email = &amp;#39;strivinglife@gmail.com&amp;#39;;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Line 35 should also be changed, per your timezone.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
     $bb-&amp;gt;gmt_offset = 0;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We&amp;#39;ll leave everything else as is, for now. Let&amp;#39;s make sure Apache is up and running, and we&amp;#39;ll see what else we have to do. Head over to &lt;a href=&#34;http://localhost/projects/bbpress/&#34;&gt;http://localhost/projects/bbpress/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Click the First Step link. Enter in a couple options for the Administrator. These include Login name, Website, Location, and Interests.
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll also need to define your First Forum by giving it a Name and a Description.
&lt;/p&gt;
&lt;p&gt;
Only Login name and Forum Name are required, so I entered &amp;#39;admin&amp;#39; and &amp;#39;Test&amp;#39;, respectively. Continue to the next step.
&lt;/p&gt;
&lt;p&gt;
The Second Step creates the tables (8) and gives you a password. It&amp;#39;s random, so hold on to it. In my case, it was &lt;strong&gt;cbe15b&lt;/strong&gt;. You can click on either link to go to the bbPress page, which is available at &lt;a href=&#34;http://localhost/projects/bbpress/&#34;&gt;http://localhost/projects/bbpress/&lt;/a&gt;, in my case.
&lt;/p&gt;
&lt;p&gt;
You can now login to check out the Administrative interface, or you check out the topic that was created.
&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h4&gt;How&amp;#39;s the code look?&lt;/h4&gt;
&lt;p&gt;
Overall, the code validates pretty dang well. There&amp;#39;s a minor issue with an opening and closing small tag, with nothing between, on the main interface view, and some tables missing summaries, but other than that &amp;hellip; code looks good.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;p&gt;
As far as the internal PHP code, like WordPress, it&amp;#39;s full. You&amp;#39;ll need to reference files and documentation, back and forth, but that&amp;#39;s to be expected, I suppose.
&lt;/p&gt;
&lt;h4&gt;Upgrading and default layout&lt;/h4&gt;
&lt;p&gt;
Unlike some of the other forums we&amp;#39;ll be looking at, there&amp;#39;s no upgrade-only installation file. Yuck. Upgrading WordPress is a beast, and it looks like that&amp;#39;s going to be an issue with bbPress.
&lt;/p&gt;
&lt;p&gt;
Where it gets really bad is when you look at the layout. The default layout, especially for the admin interface, could absolutely be better. Unfortunately, it looks like the styles are buried in multiple files, in multiple folders.
&lt;/p&gt;
&lt;p&gt;
As with WordPress, it looks like upgrading is going to be a beast (with functions dropping and being added), but even more so because there doesn&amp;#39;t appear to be a way to easily create your own styles, outside of the core files.
&lt;/p&gt;
&lt;h4&gt;Administrative interface&lt;/h4&gt;
&lt;p&gt;
The administrative interface, other than being rather ugly, is pretty simple. Unfortunately, there&amp;#39;s no way, via the interface alone, to modify the styles or code.
&lt;/p&gt;
&lt;h4&gt;The temporary conclusion&lt;/h4&gt;
&lt;p&gt;
At this point, I&amp;#39;m going to stop, since we&amp;#39;ll want other forums to compare before we go any further. However, you should have a bbPress, version 0.73, forum setup.
&lt;/p&gt;
&lt;p&gt;
Stay tuned for the next &lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown.aspx&#34;&gt;PHP Forum&lt;/a&gt; review.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://words.strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;
&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Forum Software Showdown</title>
      <link>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown/</link>
      <pubDate>Sat, 18 Nov 2006 19:22:00 -0600</pubDate>
      
      <guid>http://words.strivinglife.com/post/PHP-Forum-Software-Showdown/</guid>
      <description>&lt;p&gt;
Hopefully by the end of the month, I&amp;#39;ll have posted six reviews for six different pieces of forum software, that run on PHP (and MySQL).
&lt;/p&gt;
&lt;p&gt;
The six software programs are as follows.&lt;!--adsense--&gt;
&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown-Part-1-bbPress.aspx&#34;&gt;bbPress 0.73&lt;/a&gt; (released October 27, 2006) - http://bbpress.org/&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown-Part-4-MyBB.aspx&#34;&gt;MyBB 1.2.1&lt;/a&gt; (released September 27, 2006) - http://www.mybboard.com/&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown-Part-6-phpBB.aspx&#34;&gt;phpBB 2.0.21&lt;/a&gt; (released June 9, 2006) - http://www.phpbb.com/&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown-Part-5-PunBB.aspx&#34;&gt;PunBB 1.2.14&lt;/a&gt; (released October 15, 2006) - http://www.punbb.org/&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown-Part-3-Simple-Machines.aspx&#34;&gt;Simple Machines 1.0.9&lt;/a&gt; (released October 29, 2006) - http://www.simplemachines.org/&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://words.strivinglife.com/words/post/PHP-Forum-Software-Showdown-Part-2-Vanilla.aspx&#34;&gt;Vanilla 1.0.1&lt;/a&gt; (released August 21, 2006) - http://getvanilla.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Some of the things that I&amp;#39;ll be covering include:
&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Installation and setup
    &lt;ul&gt;
        &lt;li&gt;Steps&lt;/li&gt;
        &lt;li&gt;Requirements (PHP and database versions) &lt;/li&gt;
        &lt;li&gt;Installer and installation sizes&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Code
    &lt;ul&gt;
        &lt;li&gt;Valid?&lt;/li&gt;
        &lt;li&gt;How &amp;#39;clean&amp;#39; is it to read and navigate (the code) &lt;/li&gt;
    &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Upgrading&lt;/li&gt;
    &lt;li&gt;Default layout&lt;/li&gt;
    &lt;li&gt;Admin interface&lt;/li&gt;
    &lt;li&gt;Out-of-the-box functionality/features&lt;/li&gt;
    &lt;li&gt;Age and approximate usage&lt;/li&gt;
    &lt;li&gt;Extendability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Any other recommendations would be greatly appreciated - either of things to cover, or of other forums to review.  Please note that forums must be free/open source, and run on PHP and MySQL, minimum.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://words.strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Apache 2.0.59 to a Windows-based computer, locally: Part 4</title>
      <link>http://words.strivinglife.com/post/Installing-Apache-2059-to-a-Windows-based-computer-locally-Part-4/</link>
      <pubDate>Mon, 28 Aug 2006 21:45:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/Installing-Apache-2059-to-a-Windows-based-computer-locally-Part-4/</guid>
      <description>&lt;p&gt;In the previous three parts of this guide, we setup Apache 2.0.59 and then created the necessary connections to use ActivePerl, mod_perl, ColdFusion MX 6.1, ColdFusion MX 7.0.2, PHP 4.4.2, PHP 5.1.4, MySQL 4.1.18, and PostgreSQL 8.1.3. This time, we&#39;re going to bring everything together by creating a number of batch files to fairly easily switch between various Web server setups.&lt;/p&gt;
&lt;h3&gt;What is a batch file?&lt;/h3&gt;
&lt;p&gt;A batch file is basically a way to run a number of Windows prompts at once. In this particular case, we&#39;ll be using it to stop the Web server, copy, rename, and delete, files, and then start the necessary services up once again.&lt;!--adsense--&gt;&lt;/p&gt;
&lt;p&gt;While we could do this manually, having just one, correctly setup, file to run is much easier, and much more logical.&lt;/p&gt;
&lt;h3&gt;Assumptions&lt;/h3&gt;
&lt;p&gt;I&#39;m going to assume that;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Your Web root folder is c:\home\.&lt;/li&gt;
&lt;li&gt;If you installed PHP, you placed the php.ini file in the c:\windows\ folder. &lt;/li&gt;
&lt;li&gt;If you installed Apache 1.3.x, you installed it to C:\Program Files\Apache Group\Apache\ &lt;/li&gt;
&lt;li&gt;If you installed Apache 2.0.x, you installed it to C:\Program Files\Apache Group\Apache2\ &lt;/li&gt;
&lt;li&gt;If you installed PHP, you have one working httpd.conf file for each version of PHP you installed, times each version of Apache you have installed. So, if you have two versions of PHP and one version of Apache, you should have two httpd.conf files. One for Apache with PHP 4, one for Apache with PHP 5. &lt;/li&gt;
&lt;li&gt;If you installed PHP, you have one working php.ini file for each version of PHP you installed. &lt;/li&gt;
&lt;li&gt;If you installed ColdFusion MX, you have one working httpd.conf file for each version of ColdFusion MX you installed, times each version of PHP you installed, times each version of Apache you installed, plus the number of ColdFusion MX versions you installed. So, if you installed two version of ColdFusion MX, one version of PHP, and one version of PHP, that&#39;s [(2 * 1 * 1) + 2] &lt;/li&gt;
&lt;li&gt;Each of these httpd.conf files is in c:\home\configuration\. Likewise, each php.ini file necessary is in this same folder. There is also a blank text file called zblank.txt in this folder. &lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Creating the necessary batch files&lt;/h3&gt;
&lt;p&gt;I&#39;m going to go through a batch file nice and slow, working through each line. This batch file will stop Apache 1.3.x. It will then prepare Apache 1.3.x to run PHP 4. We&#39;ll then create a text file that tells us that Apache 1.3.x, running PHP 4, is started.&lt;/p&gt;
&lt;p&gt;First, the batch file.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;net stop &#34;ColdFusion MX Application Server&#34;
net stop &#34;ColdFusion MX 7 Application Server&#34;
net stop &#34;Apache&#34;
net stop &#34;Apache2&#34;
DEL &#34;c:\home\zApache1.3_CFMX6.1_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_CFMX7.0_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_CFMX6.1_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_CFMX7.0_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_CFMX6.1_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_CFMX7.0_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_CFMX6.1_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_CFMX7.0_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_PHP5 is ready.txt&#34;
COPY &#34;C:\Program Files\Apache Group\Apache\conf\httpd.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd_backup.conf&#34;
COPY &#34;c:\home\configuration\httpd_Apache1.3_PHP4.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd.conf&#34;
COPY &#34;C:\windows\php.ini&#34; &#34;c:\windows\php_backup.ini&#34;
COPY &#34;C:\home\configuration\php_Apache_PHP4.ini&#34; &#34;c:\windows\php.ini&#34;
net start &#34;Apache&#34;
COPY &#34;C:\home\configuration\zblank.txt&#34; &#34;C:\home\zApache1.3_PHP4 is ready.txt&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Start Notepad, and we&#39;ll walk through this beast of a batch file.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;net stop &#34;ColdFusion MX Application Server&#34;
net stop &#34;ColdFusion MX 7 Application Server&#34;
net stop &#34;Apache&#34;
net stop &#34;Apache2&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These four lines stop ColdFusion MX 6.1, ColdFusion MX 7, Apache 1.3.x, and Apache 2.0.x (in order). Of course, if you have not installed one of these, you can simply remove those lines. However, if you have installed any of these, you should keep these lines in place. After all, you never know what services may be running.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;DEL &#34;c:\home\zApache1.3_CFMX6.1_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_CFMX7.0_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_CFMX6.1_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_CFMX7.0_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_CFMX6.1_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_CFMX7.0_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_CFMX6.1_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_CFMX7.0_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache1.3_PHP5 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_PHP4 is ready.txt&#34;
DEL &#34;c:\home\zApache2.0_PHP5 is ready.txt&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These lines delete the file referenced. In this case, we&#39;re deleting every possible text file that could exist. As before, if you have not installed one of the versions of Apache, or one of the versions of PHP, or one of the versions of ColdFusion MX, you can remove those lines.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;COPY &#34;C:\Program Files\Apache Group\Apache\conf\httpd.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd_backup.conf&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First, we create a backup of the httpd.conf file for Apache 1.3.x.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;COPY &#34;c:\home\configuration\httpd_Apache1.3_PHP4.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd.conf&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Second, we make a copy of the working httpd.conf file that runs Apache 1.3.x with PHP 4.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;COPY &#34;C:\windows\php.ini&#34; &#34;c:\windows\php_backup.ini&#34;
COPY &#34;C:\home\configuration\php_Apache_PHP4.ini&#34; &#34;c:\windows\php.ini&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As with the httpd.conf file, we create a backup of the php.ini file, and then copy a working PHP 4 file into the correct directory.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;net start &#34;Apache&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we start the Apache 1.3.x service.&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;COPY &#34;C:\home\configuration\zblank.txt&#34; &#34;C:\home\zApache1.3_PHP4 is ready.txt&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we copy the blank text file and rename the copy so that we know which configuration is running.&lt;/p&gt;
&lt;p&gt;Save the Notepad file as Apache1.3_PHP4.bat where ever makes the most sense to you. I put it in the configuration folder, but you could also put it in the c:\home\ folder, or another folder entirely (or on your Desktop).&lt;/p&gt;
&lt;h3&gt;Moving forward&lt;/h3&gt;
&lt;p&gt;I&#39;ve created twelve (12) batch files in a matter similar to the above, and zipped them up for download. Feel free to modify them as necessary, for your own use.&lt;/p&gt;
&lt;p&gt;Keep in mind that these are very basic batch files. It&#39;s possible to clean these up significantly, with the full range of commands at your disposal. For now, however, this will get you going.&lt;/p&gt;
&lt;p&gt;Download &lt;a title=&#34;Batch files for switching between our servers&#34; rel=&#34;download&#34; href=&#34;http://words.strivinglife.com/files/2006/08/bat_20060826.zip&#34;&gt;bat_20060826.zip&lt;/a&gt; for the twelve batch files. Feel free to modify as necessary to get them to work on your own system.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://strivinglife.net/wordpress/a-local-apache-web-server-on-a-windows-xp-computer/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Apache 2.0.59 to a Windows-based computer, locally: Part 3</title>
      <link>http://words.strivinglife.com/post/Installing-Apache-2059-to-a-Windows-based-computer2c-locally-Part-3/</link>
      <pubDate>Sat, 26 Aug 2006 16:09:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/Installing-Apache-2059-to-a-Windows-based-computer2c-locally-Part-3/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://words.strivinglife.com/words/post/Installing-Apache-2059-to-a-Windows-based-computer2c-locally-Part-1.aspx&#34;&gt;Part 1 of this Apache 2.0.59 guide&lt;/a&gt;, we setup Apache 2.0.59 on a Windows XP SP2 machine. We also setup Perl and mod_perl, attempting to mimic our Apache 1.3.34 install. In &lt;a href=&#34;http://words.strivinglife.com/words/post/Installing-Apache-2059-to-a-Windows-based-computer2c-locally-Part-2.aspx&#34;&gt;Part 2 of this Apache 2.0.59 guide&lt;/a&gt;, we setup ColdFusion MX 6.1 and 7.0. This time, we&#39;ll be continuing in our quest by adding support for both PHP 4 and PHP 5.&lt;/p&gt;
&lt;p&gt;In previous guides, we &lt;a href=&#34;http://words.strivinglife.com/words/post/Installing-PHP-on-a-local-Windows-based2c-Apache2c-server.aspx&#34;&gt;installed PHP 4&lt;/a&gt; and &lt;a href=&#34;http://words.strivinglife.com/words/post/Dual-installing-PHP-Running-PHP-5-and-4-on-the-same-local2c-Windows-based2c-Apache2c-server.aspx&#34;&gt;PHP 5&lt;/a&gt;, so if you need to install either one, do so with the above directions. If you&#39;ll be installing PHP 4 and PHP 5 for the first time, and have not installed on Apache 1.3.x already, then you may be able to pick and choose from these guides to get the information you need.&lt;/p&gt;
&lt;p&gt;Before we do this, however, we need to think about just what we&#39;re doing.&lt;/p&gt;
&lt;p&gt;Up until this point, you may have installed any (or none) of the below. (Keep in mind that you can generalize these if you have slightly newer versions. So, PHP 5.1.4 = PHP 5.x.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache 1.3.34&lt;/li&gt;
&lt;li&gt;Apache 2.0.59&lt;/li&gt;
&lt;li&gt;PHP 4.4.2&lt;/li&gt;
&lt;li&gt;PHP 5.1.4&lt;/li&gt;
&lt;li&gt;ColdFusion MX 6.1&lt;/li&gt;
&lt;li&gt;ColdFusion MX 7.0.2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This gives us a number of options on what our local Web server could be running at one time. For example, we could be running PHP 4, ColdFusion MX 6.1, and Apache 1.3.x or Apache 2.0.x. Likewise, we could use PHP 4 or PHP 5, or ColdFusion MX 6.1 or ColdFusion MX 7.0. Writing out a list of all of our possible combinations, we&#39;ve got something like the following.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apache1.3_CF6.1_PHP4&lt;/li&gt;
&lt;li&gt;Apache1.3_CF7.0_PHP4&lt;/li&gt;
&lt;li&gt;Apache1.3_CF6.1_PHP5&lt;/li&gt;
&lt;li&gt;Apache1.3_CF7.0_PHP5&lt;/li&gt;
&lt;li&gt;Apache2.0_CF6.1_PHP4&lt;/li&gt;
&lt;li&gt;Apache2.0_CF7.0_PHP4&lt;/li&gt;
&lt;li&gt;Apache2.0_CF6.1_PHP5&lt;/li&gt;
&lt;li&gt;Apache2.0_CF7.0_PHP5&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Of course, we could also run our local server without the ColdFusion MX component, or PHP component at all. For ease, however, we&#39;ll just stick with one of the above possibilities. What this means is that for each of the above that you want to run, you&#39;ll need to have an httpd.conf file.&lt;/p&gt;
&lt;p&gt;If you followed my above guides, than you should already have the Apache 1.3.x configuration files (although with slightly different names). Once we have all eight configurations, we can write batch files to automate most of the process. For getting these up and running. With one click (and maybe just a little renaming), we can have the Web server that we want up and running.&lt;/p&gt;
&lt;p&gt;Whatever you may have for Apache 1.3.x, I recommend you create a &#39;configuration&#39; folder in your DocumentRoot directory (so, c:\home\configuration\ if you&#39;ve been following along) where you can begin compiling httpd.conf files.&lt;/p&gt;
&lt;p&gt;For example, I&#39;ve obviously followed by own guides, so I have four files thus far.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;httpd_Apache1.3_CFMX6.1_PHP4.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache1.3_CFMX6.1_PHP5.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache1.3_CFMX7.0_PHP4.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache1.3_CFMX7.0_PHP5.conf &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We should also have either one or two php.ini files &amp;ndash; one for PHP 4 and one for PHP 5 &amp;ndash; that we&#39;ll also want to put copies of in this folder.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;php_Apache_PHP4.ini &lt;/li&gt;
&lt;li&gt;php_Apache_PHP5.ini &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache 1.3.x and Apache 2.0.x use the same php.ini files. So, it&#39;s not necessary to make one copy each for Apache 1.3.x and one each for 2.0.x.&lt;/p&gt;
&lt;p&gt;This done, we can begin connecting to PHP 4 and PHP 5 on Apache 2.0.x.&lt;/p&gt;
&lt;h3&gt;Hooking up PHP 4.4.2&lt;/h3&gt;
&lt;p&gt;In a previous guide, we &lt;a href=&#34;http://words.strivinglife.com/words/post/Installing-PHP-on-a-local-Windows-based2c-Apache2c-server.aspx&#34;&gt;installed PHP 4.4.2&lt;/a&gt; and in yet &lt;a href=&#34;http://words.strivinglife.com/words/post/Moving-the-location-of-PHP-on-your-hard-drive.aspx&#34;&gt;a later guide moved our installation&lt;/a&gt; to the c:\php4\ folder.&lt;/p&gt;
&lt;p&gt;Since we&#39;ve already got PHP 4 working on Apache 1.3.x, most of our setup is already complete. Now it&#39;s just a matter of hooking up Apache 2.0.x to recognize it.&lt;/p&gt;
&lt;p&gt;First, we&#39;ll need to make sure we&#39;ve got a backup of the httpd.conf file in the C:\Program Files\Apache Group\Apache2\conf folder.&lt;/p&gt;
&lt;p&gt;Now open the Apache 2 httpd.conf file. Do a search for LoadModule, and at the end of this section, add the following line. Keep in mind that if you installed PHP 4 to a different folder, you should make that change here as well.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LoadModule php4_module &#34;c:/php4/php4apache2.dll&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, do a search for AddType. After the first uncommented line (AddType application/x-gzip .gz .tgz), place the following.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AddType application/x-httpd-php .php&lt;br /&gt;AddType application/x-httpd-php-source .phps&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally, add &#39;index.php&#39; to the DirectoryIndex line, where ever you&#39;d like it be called in the order of things. Depending upon preference, you may also want to add index.htm, since Apache 2.0.x doesn&#39;t seem to want to include these.&lt;/p&gt;
&lt;p&gt;Save httpd.conf. Now go to the c:\php4\ directory (or where you installed PHP 4) and copy the php4apache2.dll from the sapi folder into the root PHP folder. So, from c:\php4\sapi\ to c:\php4\.&lt;/p&gt;
&lt;p&gt;For php.ini, everything should be setup correctly. However, you&#39;ll want to verify that the right php.ini file is in place.&lt;/p&gt;
&lt;p&gt;Now start Apache2 from the Services panel (or the Apache Services Monitor) and you should find that the description lists PHP 4. If you go to &lt;a href=&#34;http://localhost/phpinfo.php&#34;&gt;http://localhost/phpinfo.php&lt;/a&gt; (if you created this file), you should also find that PHP is up and running.&lt;/p&gt;
&lt;p&gt;Make sure both your ColdFusion MX 6.1 and ColdFusion MX 7.0 httpd.conf files have the httpd.conf changes made, and you can switch between either version.&lt;/p&gt;
&lt;h3&gt;Connecting to PHP 5&lt;/h3&gt;
&lt;p&gt;Assuming you&#39;ve already setup PHP 4 for Apache 2.0.x, using the instructions above, moving to PHP 5 is extremely easy. So easy, in fact, that it&#39;s scary. Make a copy of any httpd.conf files you may have for PHP 4. For example, the two I have in C:\Program Files\Apache Group\Apache2\conf\ are called httpd_CFMX6.1_PHP4.conf and httpd_CFMX7.0_PHP4.conf.&lt;/p&gt;
&lt;p&gt;I&#39;ll copy both of these and rename them to httpd_CFMX6.1_PHP5.conf and httpd_CFMX7.0_PHP5.conf. That done open both up and do a search for php4, one file at a time. You&#39;ll find php4 three times, in the following line.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LoadModule php4_module &#34;c:/php4/php4apache2.dll&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Which you&#39;ll simply change to three &#39;5&#39;s.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LoadModule php5_module &#34;c:/php5/php5apache2.dll&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now save the httpd.conf files. The php5apache2.dll file will already be in this location, so you should be set to go. Make a copy of either one of these, make sure that you&#39;re using the right php.ini file, restart Apache2, and verify that phpinfo() gives the correct information.&lt;/p&gt;
&lt;p&gt;Wasn&#39;t that easy?&lt;/p&gt;
&lt;h3&gt;Now that PHP 4 and/or PHP 5 are installed ...&lt;/h3&gt;
&lt;p&gt;Now that we&#39;ve setup PHP 4 and/or PHP 5 with Apache 2.0.x, it&#39;s time to backup the necessary .conf files into our &#39;configuration&#39; folder.&lt;/p&gt;
&lt;p&gt;At this point, you&#39;ll have up to ten files in this folder (c:\home\configuration\). Up to eight .conf files and up to two .ini files. I&#39;ve listed all ten possibilities below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;httpd_Apache1.3_CFMX6.1_PHP4.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache1.3_CFMX6.1_PHP5.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache1.3_CFMX7.0_PHP4.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache1.3_CFMX7.0_PHP5.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache2.0_CFMX6.1_PHP4.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache2.0_CFMX6.1_PHP5.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache2.0_CFMX7.0_PHP4.conf &lt;/li&gt;
&lt;li&gt;httpd_Apache2.0_CFMX7.0_PHP5.conf &lt;/li&gt;
&lt;li&gt;php_Apache_PHP4.ini &lt;/li&gt;
&lt;li&gt;php_Apache_PHP5.ini &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, let&#39;s create a blank text file called zblank.txt. Next, we should determine whether we want to have a version that does not run ColdFusion MX. If you want to, read the next section. Otherwise, skip the next section and read the following one.&lt;/p&gt;
&lt;!--nextpage--&gt;
&lt;h3&gt;Removing ColdFusion MX from our configurations&lt;/h3&gt;
&lt;p&gt;To remove ColdFusion MX, you&#39;ll need four more httpd.conf files. Two for Apache 1.3.x and two for Apache 2.0.x, as each has two versions of PHP. Since it doesn&#39;t matter which one we take from, just copy the four httpd.conf files that reference CFMX6.1 in their file names.&lt;!--adsense--&gt;&lt;/p&gt;
&lt;p&gt;Now, simply remove the &#39;Copy of &#39; and &#39;CFMX&lt;em&gt;x&lt;/em&gt;.&lt;em&gt;y&lt;/em&gt;&#39; from the four file names. You&#39;ll end up with the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;httpd_Apache1.3_PHP4.conf&lt;/li&gt;
&lt;li&gt;httpd_Apache1.3_PHP5.conf&lt;/li&gt;
&lt;li&gt;httpd_Apache2.0_PHP4.conf&lt;/li&gt;
&lt;li&gt;httpd_Apache2.0_PHP5.conf &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There&#39;s just a couple of things to remove from each of these conf files. The following block will need to be removed from the Apache 1.3.x files.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# JRun Settings&lt;br /&gt;LoadModule jrun_module &#34;C:/CFusionMX/runtime/lib/wsconfig/1/mod_jrun.so&#34;&lt;br /&gt;&amp;lt;IfModule mod_jrun.c&amp;gt;&lt;br /&gt;JRunConfig Verbose false&lt;br /&gt;JRunConfig Apialloc false&lt;br /&gt;JRunConfig Ssl false&lt;br /&gt;JRunConfig Ignoresuffixmap false&lt;br /&gt;JRunConfig Serverstore &#34;C:/CFusionMX/runtime/lib/wsconfig/1/jrunserver.store&#34;&lt;br /&gt;JRunConfig Bootstrap 127.0.0.1:51010&lt;br /&gt;#JRunConfig Errorurl &amp;lt;optionally redirect to this URL on errors&amp;gt;&lt;br /&gt;AddHandler jrun-handler .jsp .jws .cfm .cfml .cfc&lt;br /&gt;&amp;lt;/IfModule&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And this block will need to be removed from the Apache 2.0.x files.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# JRun Settings&lt;br /&gt;LoadModule jrun_module &#34;C:/CFusionMX/runtime/lib/wsconfig/2/mod_jrun20.so&#34;&lt;br /&gt;&amp;lt;IfModule mod_jrun20.c&amp;gt;&lt;br /&gt;JRunConfig Verbose false&lt;br /&gt;JRunConfig Apialloc false&lt;br /&gt;JRunConfig Ssl false&lt;br /&gt;JRunConfig Ignoresuffixmap false&lt;br /&gt;JRunConfig Serverstore &#34;C:/CFusionMX/runtime/lib/wsconfig/2/jrunserver.store&#34;&lt;br /&gt;JRunConfig Bootstrap 127.0.0.1:51010&lt;br /&gt;#JRunConfig Errorurl &amp;lt;optionally redirect to this URL on errors&amp;gt;&lt;br /&gt;AddHandler jrun-handler .jsp .jws .cfm .cfml .cfc&lt;br /&gt;&amp;lt;/IfModule&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally, make sure &#39;index.cfm index.cfml&#39; is removed from the DirectoryIndex lines in each file.&lt;/p&gt;
&lt;p&gt;By allowing our Apache 2.0.x server, and Apache 1.3.x server, to run without checking for ColdFusion MX, we can keep it running quick, even if we decide not to start any versions of ColdFusion MX.&lt;/p&gt;
&lt;p&gt;The only thing we have left is hooking up MySQL and PostgreSQL and creating batch files to use these httpd.conf and php.ini files to get the server we want up and running.&lt;/p&gt;
&lt;p&gt;So, let the hardest part begin.&lt;/p&gt;
&lt;h3&gt;Connecting to MySQL and PostgreSQL&lt;/h3&gt;
&lt;p&gt;Amazingly enough, as long as you already setup MySQL and PostgreSQL for Apache 1.3.x, you&#39;re all set to begin using MySQL and PostgreSQL for both ColdFusion MX 6.1, ColdFusion MX 7.0, PHP 4, and PHP 5. This is because ColdFusion MX is handling the SQL requests via the datasources, and PHP is likewise handling it&#39;s own requests (via the php.ini file).&lt;/p&gt;
&lt;p&gt;Feel free to test this using the PHP files I detailed before (&lt;a href=&#34;http://words.strivinglife.com/words/post/Installing-MySQL-and-phpMyAdmin-on-a-local-Windows-based2c-Apache2c-server.aspx&#34;&gt;check MySQL connection in PHP&lt;/a&gt; | &lt;a href=&#34;http://words.strivinglife.com/words/post/Installing-PostgreSQL-on-a-local-Windows-based2c-Apache2c-server.aspx&#34;&gt;check PostgreSQL connection in PHP&lt;/a&gt;) or just using the ColdFusion MX Administrator to check all datasources.&lt;/p&gt;
&lt;h3&gt;Coming in Part 4 ...&lt;/h3&gt;
&lt;p&gt;In Part 4, I&#39;ll be going over how to create the batch files that we&#39;ll need to work with the httpd.conf and php.ini files that we&#39;ve created. While I could detail it here, better to just put it in it&#39;s own article/post, as that makes things much easier (if not for you, then at least for me ;)).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://words.strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dual-installing PHP: Running PHP 5 and 4 on the same local, Windows-based, Apache, server</title>
      <link>http://words.strivinglife.com/post/Dual-installing-PHP-Running-PHP-5-and-4-on-the-same-local-Windows-based-Apache-server/</link>
      <pubDate>Tue, 18 Jul 2006 20:34:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/Dual-installing-PHP-Running-PHP-5-and-4-on-the-same-local-Windows-based-Apache-server/</guid>
      <description>&lt;p&gt;In previous guides, we &lt;a href=&#34;http://strivinglife.com/words/post/Installing-PHP-on-a-local-Windows-based-Apache-server.aspx&#34;&gt;installed PHP 4.4.2&lt;/a&gt; and later &lt;a href=&#34;http://strivinglife.com/words/post/Moving-the-location-of-PHP-on-your-hard-drive.aspx&#34;&gt;moved our installation to a different folder&lt;/a&gt;. This time, we&#39;ll be installing the current release of PHP 5 (5.1.4) so that we can still switch back to PHP 4.4.2 if we&#39;d like.&lt;/p&gt;
&lt;h3&gt;Downloading PHP 5.x&lt;/h3&gt;
&lt;p&gt;The current version of PHP 5.x is 5.1.4, so we&#39;ll begin by downloading that from PHP.net. We&amp;rsquo;ll want to download the (Windows Binaries) zip file, even though it is significantly larger in size than the installer (the zip file is almost 9 MB, compared to less than 3 MB for the executable), but allows us a deal more flexibility.&lt;/p&gt;
&lt;h3&gt;Installing&lt;/h3&gt;
&lt;p&gt;Once you&#39;ve downloaded the zip file, extract the contents to a folder called c:\php5\. Once done, php.exe will have the full path of c:\php5\php.exe.&lt;/p&gt;
&lt;p&gt;As with the PHP 4 installation, the install.txt file will detail how to install PHP 5. However, since you&#39;re using this guide, you shouldn&#39;t need to consult it. As with our PHP 4 installation, we&#39;ll be installing PHP 5 as a module, instead of as CGI binary (again, you can do this instead, if you so desire).&lt;/p&gt;
&lt;p&gt;Start by backing up all of your httpd.conf files, in C:\Program Files\Apache Group\Apache\conf (if using the defaults). Since these work, add &#39;_php4&#39; to each of these backups.&lt;/p&gt;
&lt;p&gt;For example, I have three httpd.conf files that I&#39;m backing up; httpd.conf, httpd_CFMX6.1.conf, and httpd_CFMX7.01.conf. I&#39;ll be creating copies of each of these files, and calling them httpd_php4.conf, httpd_php4_CFMX6.1.conf, and httpd_php4_CFMX7.01.conf. This way I know that these use PHP 4. Once we modify the httpd.conf file(s) below, it may be a good idea to create backups and then call name them with &#39;_php5&#39;.&lt;/p&gt;
&lt;p&gt;For the next steps, I&#39;ll be assuming that you&#39;ve already installed PHP 4.&lt;/p&gt;
&lt;p&gt;Begin by doing a search for&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LoadModule php4_module &#34;c:/php4/php4apache.dll&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Change this to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LoadModule php5_module &#34;c:/php5/php5apache.dll&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now do a search for&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AddModule mod_php4.c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And change this to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AddModule mod_php5.c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Save httpd.conf. Next, head over to c:\windows\ and find the php.ini file. Rename this file to php_php4.ini (to keep with our naming standard above). We&#39;re renaming the original file, in this case, because we actually want to copy the file php.ini-dist from the c:\php5 folder to the c:\windows folder, and rename it to simply php.ini.&lt;/p&gt;
&lt;p&gt;Once you&#39;ve renamed the file, open it up. Once the file has been opened, do a search for doc_root and change it from&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;doc_root =&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;doc_root = &#34;c:\home&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Or where your document root is for Apache.&lt;/p&gt;
&lt;p&gt;Now do a search for the following line&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;;session.save_path = &#34;/tmp&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And change that to your temporary PHP folder (in my previous guide, it ended up being&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;session.save_path = &#34;c:/windows/temp/temp_php&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Make sure you remove the semi-colon from the beginning of the line to uncomment this line. Make sure that this folder exists.&lt;/p&gt;
&lt;p&gt;Finally, search for the following line&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;extension_dir = &#34;./&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and change it to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;extension_dir = &#34;c:\php5\ext\&#34;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you&#39;ve installed &lt;a href=&#34;http://strivinglife.com/words/post/Installing-MySQL-and-phpMyAdmin-on-a-local-Windows-based-Apache-server.aspx&#34;&gt;MySQL&lt;/a&gt; (this page also contains a script to check the connection), you can enable access by uncommenting the following line&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;;extension=php_mysql.dll&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You&#39;ll also want to copy libmysql.dll from c:\php5\ to c:\windows\system32\.&lt;/p&gt;
&lt;p&gt;If you&#39;ve installed &lt;a href=&#34;http://strivinglife.com/words/post/Installing-PostgreSQL-on-a-local-Windows-based-Apache-server.aspx&#34;&gt;PostgreSQL&lt;/a&gt; (this page also contains a script to check the connection), you can enable access by uncommenting the following line&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;;extension=php_pgsql.dll&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Save your changes to the php.ini file, and close out of the file. You may want to create a copy of this file as php_php5.ini - this way you have both a php4 and php5 file.&lt;/p&gt;
&lt;p&gt;Finally, in c:\php5\, copy php5ts.dll into the c:\windows\ folder.&lt;/p&gt;
&lt;p&gt;Restart Apache, and assuming it starts, hit the phpinfo.php page (which contains the following lines).&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php
phpinfo();
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you visit this page, you should be told that you&#39;re running PHP 5.1.4. You may notice that Zend Optimizer is no longer listed as being installed.&lt;/p&gt;
&lt;p&gt;If you made a copy of the php.ini file for PHP 4 (php_php4.ini is what I recommended), then you can copy the last four lines from this file, which are as follows (&lt;span style=&#34;text-decoration: line-through;&#34;&gt;I&#39;m including the new line as a line&lt;/span&gt; the new line is absent from the code below, but it sits immediately before the first line below)&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;text&#34;&gt;[Zend]
zend_extension_manager.optimizer_ts=&#34;C:\Program Files\Zend\ZendOptimizer-3.0.1\lib\Optimizer-3.0.1&#34;
zend_extension_ts=&#34;C:\Program Files\Zend\ZendOptimizer-3.0.1\lib\ZendExtensionManager.dll&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Paste these lines at the end of your php.ini (and php_php5.ini file, if necessary) file. Restart Apache and Optimizer 3.0.1 should display on the phpinfo() page.&lt;/p&gt;
&lt;p&gt;Until then, verify that you have backups of the files that we modified in this guide; httpd.conf and php.ini. In a later guide, or update, I&#39;ll detail how to setup a batch file to automatically move the necessary files to switch from PHP 4 to PHP 5, and vice versa (again, for updates, leave a comment).&lt;/p&gt;
&lt;p&gt;To manually change from PHP 4 to PHP 5, and vice versa, simply delete the existing httpd.conf file. Next, make a copy of the httpd_php4.conf or httpd_php5.conf file, and rename it to httpd.conf. Do the same thing for the php.ini file. Finally, restart Apache. As long as you keep your backup copies, you can switch back and forth fairly easily. Again, a future batch file will make this much easier, by allowing one file to do all the work for you.&lt;/p&gt;
&lt;h3&gt;The batch files&lt;/h3&gt;
&lt;p&gt;Below is code for two batch files. Lines beginning with === should not be entered into the batch file - they merely contain the name of the file. Note that you may need to make some modifications, based upon where you installed programs and files.&lt;/p&gt;
&lt;p&gt;c:\home\zblank.txt is simply a blank file. Including blank lines, each batch file contains 12 lines (2 of which are blank).&lt;/p&gt;
&lt;h4&gt;===_start php4.bat&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;net stop &#34;Apache&#34;
DEL &#34;c:\home\php4 is ready.txt&#34;
DEL &#34;c:\home\php5 is ready.txt&#34;
COPY &#34;c:\windows\php.ini&#34; &#34;c:\windows\php_backup.ini&#34;
COPY &#34;c:\windows\php_php4.ini&#34; &#34;c:\windows\php.ini&#34;

COPY &#34;C:\Program Files\Apache Group\Apache\conf\httpd_php4.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd.conf&#34;
COPY &#34;C:\Program Files\Apache Group\Apache\conf\httpd_php4_CFMX6.1.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd_CFMX6.1.conf&#34;
COPY &#34;C:\Program Files\Apache Group\Apache\conf\httpd_php4_CFMX7.01.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd_CFMX7.01.conf&#34;

net start &#34;Apache&#34;
COPY &#34;C:\home\zblank.txt&#34; &#34;C:\home\php4 is ready.txt&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;===_start php5.bat&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;&lt;code class=&#34;powershell&#34;&gt;net stop &#34;Apache&#34;
DEL &#34;c:\home\php4 is ready.txt&#34;
DEL &#34;c:\home\php5 is ready.txt&#34;
COPY &#34;c:\windows\php.ini&#34; &#34;c:\windows\php_backup.ini&#34;
COPY &#34;c:\windows\php_php5.ini&#34; &#34;c:\windows\php.ini&#34;

COPY &#34;C:\Program Files\Apache Group\Apache\conf\httpd_php5.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd.conf&#34;
COPY &#34;C:\Program Files\Apache Group\Apache\conf\httpd_php5_CFMX6.1.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd_CFMX6.1.conf&#34;
COPY &#34;C:\Program Files\Apache Group\Apache\conf\httpd_php5_CFMX7.01.conf&#34; &#34;C:\Program Files\Apache Group\Apache\conf\httpd_CFMX7.01.conf&#34;

net start &#34;Apache&#34;
COPY &#34;C:\home\zblank.txt&#34; &#34;C:\home\php5 is ready.txt&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;http://strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moving the location of PHP on your hard drive</title>
      <link>http://words.strivinglife.com/post/moving-the-location-of-PHP-on-your-hard-drive/</link>
      <pubDate>Sat, 01 Jul 2006 07:26:00 -0500</pubDate>
      
      <guid>http://words.strivinglife.com/post/moving-the-location-of-PHP-on-your-hard-drive/</guid>
      <description>&lt;p&gt;
In this article, we&amp;#39;ll be moving our &lt;a href=&#34;http://strivinglife.com/words/post/Installing-PHP-on-a-local-Windows-based%2c-Apache%2c-server.aspx&#34;&gt;installation of PHP 4.4.2&lt;/a&gt; from c:\php\ to c:\php4\. We&amp;#39;ll be doing this primarily because we may like the ability to run multiple versions of PHP at one time, on our development server.
&lt;/p&gt;
&lt;p&gt;
This will pave the way for our future installation of PHP 5.1.4 (or the current version of PHP 5.x). The added benefit is that we&amp;#39;ll have an idea of just how many documents are involved in a relatively simple change.
&lt;/p&gt;
&lt;h4&gt;Renaming the directory&lt;/h4&gt;
&lt;p&gt;
The first thing we&amp;#39;ll do is stop the Apache service. By doing this, anyone who attempts to visit our site, which is primarily us in this case, will see the same error message. On the other hand, if we were to move PHP without stopping Apache, it&amp;#39;s possible that we could have a security hole &amp;ndash; PHP code served as plaintext. While it&amp;#39;s not too big of a concern for our development server, it could be a concern in a production environment, so we may as well just learn things right the first time.
&lt;/p&gt;
&lt;p&gt;
Once Apache has stopped, we&amp;#39;ll rename our directory from c:\php to c:\php4.
&lt;/p&gt;
&lt;p&gt;
If you attempt to start Apache now, it won&amp;#39;t work; Apache just won&amp;#39;t want to start. We know why, but if you want the specifics, you can go to the Application errors under Event Viewer. If you followed the tutorial where we &lt;a href=&#34;http://strivinglife.com/words/post/Creating-a-Microsoft-Management-Console-for-our-local-Windows-based%2c-Apache-server.aspx&#34;&gt;setup a Microsoft Management Console&lt;/a&gt;, then you can do this rather easily.
&lt;/p&gt;
&lt;h4&gt;httpd.conf&lt;/h4&gt;
&lt;p&gt;
The next thing to change is the httpd.conf file(s). If you&amp;#39;ve got a number of these, then you&amp;#39;ll probably want to change them all at the same time. However, you&amp;#39;ll want to make a backup copy first.
&lt;/p&gt;
&lt;p&gt;
Head over to C:\Program Files\Apache Group\Apache\conf\, or where ever your install directory is, backup each httpd.conf file that you need to (I had four to backup &amp;ndash; one current, one backup, and two more for two versions of ColdFusion). Once you&amp;#39;ve backed these up, open them up.
&lt;/p&gt;
&lt;p&gt;
If we look back at our &lt;a href=&#34;http://strivinglife.com/words/post/Installing-PHP-on-a-local-Windows-based%2c-Apache%2c-server.aspx&#34;&gt;PHP install tutorial&lt;/a&gt;, it looks like we have one thing to change in this document &amp;ndash; we must find and correct the following line.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    LoadModule php4_module &amp;quot;c:/php/php4apache.dll&amp;rdquo;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Make the change in &lt;em&gt;each&lt;/em&gt; of the httpd.conf files that you backed up, at the &lt;em&gt;same&lt;/em&gt; time. It makes more sense to do it this way, unless you&amp;#39;d like to test each of the httpd.conf files now. (Id est, in order to verify our correction, we&amp;#39;d technically have to test each configuration now, to verify that we made the correction correctly. However, if we just carefully make each change at the semi-same time, we&amp;#39;ll cut a corner and not &lt;em&gt;need&lt;/em&gt; to test each configuration now. Of course, we really should, and if we have the time, we should.)
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ll recall, when we installed PHP we also copied some files into the c:\windows\ folder, and it looks like we do have one other modification to make with a file there.
&lt;/p&gt;
&lt;h4&gt;php.ini&lt;/h4&gt;
&lt;p&gt;
There&amp;#39;s one other change involving the c:\windows\php.ini file. Backing up this file is optional, depending upon how often you accidentally change more than you should ;) Open this file and correct the following line.
&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;
    extension_dir = &amp;quot;C:\php\extensions\&amp;quot;
    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Save this file. If you&amp;#39;ve installed Zend Optimizer, you may also want to immediately make this change in the backup php.ini file(s) as well. We should now be ready to start Apache.
&lt;/p&gt;
&lt;h4&gt;Starting Apache&lt;/h4&gt;
&lt;p&gt;
If you followed the above correctly, you should now be able to start Apache successfully. If you have any problems, make sure you check the Application errors in the Event Viewer.
&lt;/p&gt;
&lt;p&gt;
Go to your phpinfo file and verify that the page comes up correctly. Go to any of your other PHP files to verify that they also come up (like phpMyAdmin, and the like).
&lt;/p&gt;
&lt;p&gt;
And with that, you&amp;#39;ve setup PHP to use a different directory. As stated above, this will allow you to install PHP5 as well (in c:\php5, for example).
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://strivinglife.com/local-apache-server/&#34;&gt;View all of the steps to creating a local Web server, for development.&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>